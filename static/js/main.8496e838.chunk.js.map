{"version":3,"sources":["assets/vr.png","assets/banner.png","Components/default/scene.txt","Components/default/asset.txt","Components/default/action.txt","Components/default/timeline.txt","Components/private-route/PrivateRoute.jsx","utils/setAuthToken.jsx","server_urls.js","redux/actions/authActions.jsx","redux/actions/types.jsx","redux/reducers/authReducers.jsx","redux/reducers/errorReducers.jsx","redux/reducers/index.jsx","redux/store.jsx","utils/checkjson.js","Components/AddFile/AddFile.jsx","Components/Auth/Blur.jsx","Components/Auth/Login.jsx","Components/Auth/Register.jsx","Components/Project/ProjectRow.jsx","Components/MyFiles/FileRow.jsx","Components/Dashboard/Dashboard.jsx","Components/EditFile/EditFile.jsx","Components/MyFiles/MyFiles.jsx","Components/NotFound/NotFound.jsx","Components/Profile/Profile.jsx","Components/Project/Project.jsx","Components/Project/Behaviour.jsx","Components/Project/ProjectPageContent.jsx","Components/Project/ProjectPage.jsx","Components/Sidebar/NavItem.jsx","Components/Sidebar/SidebarContent.jsx","Components/Sidebar/SocialButton.jsx","Components/Sidebar/Sidebar.jsx","Components/Help/HelpItem.jsx","Components/Help/HelpPage.jsx","Components/AllFiles/AllFiles.jsx","App.js","serviceWorker.js","index.js","assets/empty.png"],"names":["module","exports","connect","state","auth","Component","component","rest","render","props","isAuthenticated","to","setAuthToken","token","axios","defaults","headers","common","backend","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","user","loading","combineReducers","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","isJson","str","JSON","parse","e","AddFile","useState","filename","setfilename","setLoading","React","privateFile","setPrivateFile","history","useHistory","toast","useToast","submitform","a","jwttoken","getItem","requestOptions","post","name","private","push","title","status","duration","isClosable","position","console","log","response","data","message","spacing","pt","pl","separator","color","as","Link","isCurrentPage","backgroundColor","flexDir","justifyContent","alignItems","py","boxShadow","p","rounded","align","borderWidth","borderColor","mb","colorScheme","placeholder","isRequired","onChange","target","value","display","pb","htmlFor","id","defaultChecked","mx","minW","my","leftIcon","onClick","isLoading","isDisabled","Blur","width","useBreakpointValue","base","md","lg","zIndex","height","viewBox","fill","xmlns","cx","cy","r","Login","onChangeEmail","setState","email","onChangePassword","password","loginSubmit","preventDefault","userData","loginUser","this","nextProps","minH","SimpleGrid","maxW","columns","sm","lineHeight","fontSize","textColor","src","vr","alt","bg","mt","isInvalid","border","_placeholder","passwordIncorrect","loadingText","fontFamily","w","bgGradient","_hover","top","left","style","filter","then","res","setItem","jwt_decode","catch","err","Register","onChangeName","validator","nameerr","onChangeUsername","usernameerr","username","onChangeOrganization","organizationerr","organization","isEmail","emailerr","isLength","min","max","passworderr","onChangePassword2","password2err","password2","registerSubmit","newUser","registerUser","disabled","withRouter","ProjectRow","owner","projid","isFinished","grammarName","asset","scene","custom","timeline","dash","bgColor","useColorModeValue","nameColor","borderRadius","justify","direction","maxWidth","fontWeight","size","variant","zip","JSZip","scenejson","actionjson","assetjson","customjson","timelinejson","folder","file","stringify","generateAsync","content","href","URL","createObjectURL","link","document","createElement","download","body","appendChild","click","removeChild","revokeObjectURL","FileRow","jsonid","isprivate","setdata","show","own","useDisclosure","isOpen","onOpen","onClose","cancelRef","useRef","ondelete","delete","d","_id","me","cursor","FaTrashAlt","FaPencilAlt","leastDestructiveRef","ref","ml","Date","getHours","recentProjects","setRecentProjects","recentFiles","setRecentFiles","getRecentProjects","Axios","get","getRecentFiles","useEffect","f","flex","_after","bottom","split","objectFit","banner","templateColumns","gap","maxH","overflow","pos","h","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderTopColor","transform","length","map","key","scenefile","assetfile","actionfile","timelinefile","EditFile","grammarfor","setGrammarfor","flag","setflag","isSaved","setSaved","scenedef","setScenedef","assetdef","setAssetdef","actiondef","setActiondef","timelinedef","setTimelinedef","scenedata","setSceneData","assetdata","setAssetData","actiondata","setActionData","timelinedata","setTimelineData","fileid","useParams","fetchdata","fetchDefault","fetch","response1","ok","Error","text","data1","response2","data2","response3","data3","response4","data4","error","saveFiles","url","patch","thickness","speed","emptyColor","isReadOnly","isChecked","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","mode","theme","newValue","wrapEnabled","MyFiles","getmyfiles","row","ownerid","empty","NotFound","textAlign","px","backgroundClip","setname","setemail","setusername","setOrganization","getuser","Project","files","setfiles","projectName","setProjectName","setGrammarName","submitLoading","setSubmitLoading","onCreate","olddata","getmyprojects","getfiles","isCentered","index","Behaviour","obj","reorder","useDrag","item","collect","monitor","isDragging","drag","rulename","rules","valid_rule","grammarDataArray","fl","tipcolors","number","object","boolean","string","array","jsonValidator","grammar","validating","keys","Object","keys22","grammarArray","includes","en","app","i","root","proot","typeof","hasOwnProperty","c","repeat","b","found","indexOf","req","ProjectPageContent","forwardRef","children","stepslen","nextStep","prevStep","reset","activeStep","projectname","projectid","submitting","setSubmitting","validated","setValidated","displayErrors","setDisplayErrors","rule_list","setRuleList","names","setNames","arr","setArr","idx","setIdx","downloadable","setDownloadable","description","setDescription","setSeed","setRulename","setPosition","setSavebutton","rule","setRule","setLogic","board","setBoard","setReorder","useDrop","accept","drop","isOver","canDrop","convertPointer","pointer","lines","column","getFiles","requestOption","res2","getRules","project_id","res_rules","myobjs","all_names","tarr","articles","_objectname","ObjAction","actresid","downloadTxtFile","fileName","blob","Blob","downlink","asset_valid","asset_list","valid_obj","j","assetValidator","all_object_ids","ret2","ret1","sourceObj","targetObj","repeatactionfor","repeat_assets","curr_word","Array","from","char","word","onValidate2","data_name","onValidate","tnames","tdata","myjson","_sid","mygrm","showValidateHandler","code","jsonData","types","order","prev","next","constructs","conditionStart","conditionEnd","scopeStart","scopeEnd","pre","parent","conditionSeparator","specialSymbols","validation_server","method","json","val","valid","saveButton","btoa","onNextStep","onFinish","rowSpan","colSpan","pr","marginTop","marginBottom","newvalue","event","marginLeft","flexDirection","mr","Val","splitarr","match","m","FaExclamationCircle","boxSize","isFitted","_selected","colStart","colEnd","paddingRight","paddingLeft","paddingTop","_dark","overflowX","overflowY","aria-label","margin","semantics","elements","newdata_part1","slice","newdata_part2","editorDisplay","displayName","marginRight","onCursorChange","newplace","$lines","onSelectionChange","doc","Math","random","atob","readOnly","maxHeight","draggable","onDragStart","dataTransfer","setData","onDragOver","onDrop","dragIndex","parseInt","getData","hoverIndex","dragged","newBoard","splice","handleReorder","steps","label","ProjectPage","useSteps","initialStep","setStep","currProject","setcurrProject","getProject","onClickStep","step","labelOrientation","DndProvider","HTML5Backend","NavItem","icon","role","transition","_groupHover","MdHome","FaProjectDiagram","BsFiles","VscFiles","FaSignInAlt","FaRegUser","MdHelp","SocialButton","button","year","setYear","sidebar","currentYear","getFullYear","placement","borderBottomWidth","borderStyle","Stack","HelpItem","subtitle","className","HelpPage","extendTheme","components","Steps","App","jwtToken","currentTime","now","exp","location","useColorMode","colorMode","toggleColorMode","exact","path","Dashboard","Profile","AllFiles","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8496e838.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vr.9d2f5d50.png\";","module.exports = __webpack_public_path__ + \"static/media/banner.127b2e8c.png\";","module.exports = __webpack_public_path__ + \"static/media/scene.a7a93f0d.txt\";","module.exports = __webpack_public_path__ + \"static/media/asset.a80fba56.txt\";","module.exports = __webpack_public_path__ + \"static/media/action.fdb795e9.txt\";","module.exports = __webpack_public_path__ + \"static/media/timeline.44f05b74.txt\";","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import axios from 'axios';\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\nexport default setAuthToken;\n","export const validation_server = \"https://validation-server-9ce3.onrender.com\"\nexport const backend = \"https://backend-o48d.onrender.com\"\n","import axios from \"axios\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\"; // Register User\nimport { backend } from \"../../server_urls\";\n\nexport const registerUser = (userData, history) => (dispatch) => {\n  axios\n    // .post(\"http://localhost:5002/api/users/register\", userData)\n    .post(backend + \"/api/users/register\", userData)\n    .then((res) => history.push(\"/login\")) // re-direct to login on successful register\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n}; // Login - get user token\nexport const loginUser = (userData) => (dispatch) => {\n  axios\n    // .post(\"http://localhost:5002/api/users/login\", userData)\n    .post(backend + \"/api/users/login\", userData)\n    .then((res) => {\n      // Save to localStorage// Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      console.log(decoded);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n}; // Set logged in user\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n}; // User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n}; // Log user out\nexport const logoutUser = () => (dispatch) => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import { SET_CURRENT_USER, USER_LOADING } from '../actions/types';\nconst isEmpty = require('is-empty');\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from '../actions/types';\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducers';\nimport errorReducer from './errorReducers';\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__()(\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n          window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\n      )) ||\n      compose\n  )\n);\nexport default store;\n","const isJson = (str) => {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    //Error\n    //JSON is not okay\n    return false;\n  }\n\n  return true;\n};\n\nexport default isJson;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport {\n  Box,\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Button,\n  Center,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  Radio,\n  RadioGroup,\n  Stack,\n  useToast,\n  Switch,\n} from \"@chakra-ui/react\";\n\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-terminal\";\nimport { FaSave } from \"react-icons/fa\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\n\nimport isJson from \"../../utils/checkjson\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\n\nconst AddFile = () => {\n  const [filename, setfilename] = useState(\"\");\n  const [data, setdata] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [grammarfor, setGrammarfor] = React.useState(\"scene\");\n  const [privateFile, setPrivateFile] = React.useState(false);\n  const history = useHistory();\n  const toast = useToast();\n\n  function onChange(newValue) {\n    setdata(newValue);\n  }\n\n  const submitform = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    setLoading(true);\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      //  if (grammarfor==\"scene\"){ let url =\"http://localhost:5002/api/json/upload\";}\n      //  if (grammarfor==\"action\"){ let url =\"http://localhost:5002/api/json/upload\";}\n      //  if (grammarfor==\"asset\"){ let url =\"http://localhost:5002/api/json/upload\";}\n      //  if (grammarfor==\"custom\"){ let url =\"http://localhost:5002/api/json/upload\";}\n      //  if (grammarfor==\"timeline\"){ let url =\"http://localhost:5002/api/json/upload\";}\n\n\n      await axios.post(\n        // \"http://localhost:5002/api/json/upload\",\n        backend + \"/api/json/upload\",\n        { name: filename, private: privateFile },\n        requestOptions\n      );\n      history.push(\"/myfiles\");\n      setLoading(false);\n      toast({\n        title: \"File saved successfully\",\n        status: \"success\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n    } catch (error) {\n      console.log(error);\n      if (error.response.data.message == 'JSON file with this name already exists') {\n        toast({\n          title: \"File with this name already exists\",\n          status: \"error\",\n          duration: 10000,\n          isClosable: true,\n          position: \"top\",\n        });\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Breadcrumb\n        spacing=\"8px\"\n        pt={5}\n        pl={5}\n        separator={<ChevronRightIcon color=\"gray.500\" />}\n      >\n        <BreadcrumbItem>\n          <BreadcrumbLink as={Link} to=\"/myfiles\">\n            My Validators\n          </BreadcrumbLink>\n        </BreadcrumbItem>\n\n        <BreadcrumbItem isCurrentPage>\n          <BreadcrumbLink>Add Validator</BreadcrumbLink>\n        </BreadcrumbItem>\n      </Breadcrumb>\n      <Flex\n        backgroundColor={\"white\"}\n        flexDir={\"column\"}\n        justifyContent={\"center\"}\n        alignItems=\"center\"\n        py=\"100px\"\n      >\n        <Flex\n          boxShadow={\"xl\"}\n          p={8}\n          rounded={\"xl\"}\n          align={\"center\"}\n          borderWidth={\"1px\"}\n          borderColor=\"gray.400\"\n          mb={5}\n        >\n          <Flex justifyContent=\"center\" flexDir={\"column\"} backgroundColor={\"white\"}>\n            <Box p=\"2\">\n              <Input\n                colorScheme=\"yellow\"\n                placeholder=\"Validator Name\"\n                isRequired\n                onChange={(e) => setfilename(e.target.value)}\n                value={filename}\n              />\n            </Box>\n            <FormControl display=\"flex\" justifyContent=\"center\" pb={2}>\n              <FormLabel htmlFor=\"public-file\" mb=\"0\">\n                Private\n              </FormLabel>\n              <Switch\n                id=\"public-file\"\n                defaultChecked={privateFile}\n                onChange={() => {\n                  setPrivateFile(!privateFile);\n                  if (!privateFile) {\n                    toast({\n                      title: \"Enabled! The File will be only visible to you.\",\n                      status: \"success\",\n                      duration: 10000,\n                      isClosable: true,\n                      position: \"top\",\n                    })\n                  }\n                  else\n                  {\n                    toast({\n                      title: \"Disabled! File is publicly visible.\",\n                      status: \"success\",\n                      duration: 10000,\n                      isClosable: true,\n                      position: \"top\",\n                    })\n                  }\n                }}\n              />\n            </FormControl>\n          </Flex>\n        </Flex>\n        <Box mx={\"40px\"}>\n        </Box>\n        <Center minW=\"max-content\" justifyContent={\"center\"} my={\"20px\"}>\n          <Button\n            leftIcon={<FaSave />}\n            colorScheme=\"yellow\"\n            onClick={submitform}\n            isLoading={loading}\n            isDisabled={!filename}\n          >\n            Create Validator\n          </Button>\n        </Center>\n      </Flex>\n    </>\n  );\n};\n\nexport default AddFile;\n","import { Icon, useBreakpointValue } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport const Blur = (props) => {\n  return (\n    <Icon\n      width={useBreakpointValue({ base: \"100%\", md: \"40vw\", lg: \"30vw\" })}\n      zIndex={useBreakpointValue({ base: -1, md: -1, lg: 0 })}\n      height=\"560px\"\n      viewBox=\"0 0 528 560\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <circle cx=\"71\" cy=\"61\" r=\"111\" fill=\"#F56565\" />\n      <circle cx=\"244\" cy=\"106\" r=\"139\" fill=\"#ED64A6\" />\n      <circle cy=\"291\" r=\"139\" fill=\"#ED64A6\" />\n      <circle cx=\"80.5\" cy=\"189.5\" r=\"101.5\" fill=\"#ED8936\" />\n      <circle cx=\"196.5\" cy=\"317.5\" r=\"101.5\" fill=\"#ECC94B\" />\n      <circle cx=\"70.5\" cy=\"458.5\" r=\"101.5\" fill=\"#48BB78\" />\n      <circle cx=\"426.5\" cy=\"-0.5\" r=\"101.5\" fill=\"#4299E1\" />\n    </Icon>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../redux/actions/authActions\";\nimport vr from \"../../assets/vr.png\";\n\nimport {\n  Box,\n  Stack,\n  Heading,\n  Container,\n  Input,\n  Button,\n  SimpleGrid,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Link as CLink,\n  Text,\n} from \"@chakra-ui/react\";\nimport { Blur } from \"./Blur\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChangeEmail = (e) => {\n    this.setState({ email: e.target.value });\n  };\n\n  onChangePassword = (e) => {\n    this.setState({ password: e.target.value });\n  };\n\n  loginSubmit = (e) => {\n    this.setState({ loading: true });\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n    this.props.loginUser(userData);\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <Box position={\"relative\"} minH=\"85vh\">\n        <Container\n          as={SimpleGrid}\n          maxW={\"7xl\"}\n          columns={{ base: 1, md: 2 }}\n          spacing={{ base: 10, lg: 32 }}\n          py={{ base: 10, sm: 20, lg: 32 }}\n        >\n          <Stack spacing={{ base: 10, md: 20 }}>\n          <center>\n            <Heading\n              lineHeight={0.2}\n              fontSize={{ base: \"3xl\", sm: \"4xl\", md: \"5xl\", lg: \"6xl\" }}\n              textColor={\"black\"}\n            >\n              VReqST\n            </Heading>\n            </center>\n            <center>\n            <Text color={\"black\"} fontSize={{ base: \"sm\", sm: \"2xl\" }}>\n              Now author clear requirement specifications with less hassle for Virtual Reality Software Products\n            </Text>\n            </center>\n            <center>\n              <img src={vr} alt=\"VR Image\" width=\"250px\" height=\"100px\"/>\n            </center>\n            {/* <center>\n            <Text color={\"gray.300\"} fontSize={{ base: \"sm\", sm: \"2x2\" }}>\n              VReqST is a Tool support for writing clear requirement specifications while building Virtual Reality Software Products.It can be used by Requirement Analysts to record the elicited requirements with business stake-holders in detail.\n            </Text>\n            </center> */}\n          </Stack>\n          <Stack\n            bg={\"gray.50\"}\n            rounded={\"xl\"}\n            p={{ base: 4, sm: 6, md: 8 }}\n            spacing={{ base: 8 }}\n            maxW={{ lg: \"lg\" }}\n          >\n            <Stack spacing={4}>\n              <Heading\n                color={\"gray.800\"}\n                lineHeight={1.1}\n                fontSize={{ base: \"2xl\", sm: \"3xl\", md: \"4xl\" }}\n              >\n                Login\n              </Heading>\n            </Stack>\n            <Box as={\"form\"} mt={10}>\n              <Stack spacing={4}>\n                <FormControl isRequired isInvalid={this.state.errors?.email}>\n                  <FormLabel color={\"gray.800\"} fontSize={\"sm\"}>\n                    Email address\n                  </FormLabel>\n                  <Input\n                    placeholder=\"Enter your email\"\n                    bg={\"gray.100\"}\n                    border={0}\n                    color={\"gray.500\"}\n                    _placeholder={{\n                      color: \"gray.500\",\n                    }}\n                    type=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                  />\n                  {this.state.errors?.email && (\n                    <FormErrorMessage>\n                      {this.state.errors.email}\n                    </FormErrorMessage>\n                  )}\n                </FormControl>\n\n                <FormControl\n                  isRequired\n                  isInvalid={\n                    this.state.errors?.passwordIncorrect ||\n                    this.state.errors?.password\n                  }\n                >\n                  <FormLabel color={\"gray.800\"} fontSize={\"sm\"}>\n                    Password\n                  </FormLabel>\n                  <Input\n                    placeholder=\"Enter your password\"\n                    bg={\"gray.100\"}\n                    border={0}\n                    color={\"gray.500\"}\n                    _placeholder={{\n                      color: \"gray.500\",\n                    }}\n                    type=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                  />\n                  {this.state.errors?.passwordIncorrect && (\n                    <FormErrorMessage>\n                      {this.state.errors.passwordIncorrect}\n                    </FormErrorMessage>\n                  )}\n                  {this.state.errors?.password && (\n                    <FormErrorMessage>\n                      {this.state.errors.password}\n                    </FormErrorMessage>\n                  )}\n                </FormControl>\n              </Stack>\n              <Box color={\"black\"} py={2}>\n                New User?{\" \"}\n                <CLink as={Link} color=\"red.400\" to={\"/register\"}>\n                  Register\n                </CLink>\n              </Box>\n              <Button\n                isLoading={this.state.loading}\n                loadingText=\"Logging in\"\n                fontFamily={\"heading\"}\n                mt={3}\n                w={\"full\"}\n                bgGradient=\"linear(to-r, red.400,pink.400)\"\n                color={\"white\"}\n                _hover={{\n                  bgGradient: \"linear(to-r, red.400,pink.400)\",\n                  boxShadow: \"xl\",\n                }}\n                onClick={this.loginSubmit}\n              >\n                Login\n              </Button>\n            </Box>\n          </Stack>\n        </Container>\n        <Blur\n          position={\"absolute\"}\n          top={-150}\n          left={-150}\n          style={{ filter: \"blur(70px)\" }}\n        />\n      </Box>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport validator from \"validator\";\nimport { registerUser } from \"../../redux/actions/authActions\";\nimport {\n  Box,\n  Stack,\n  Heading,\n  Container,\n  Input,\n  Button,\n  SimpleGrid,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Link as CLink,\n  Text,\n} from \"@chakra-ui/react\";\nimport { Blur } from \"./Blur\";\nimport vr from \"../../assets/vr.png\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      username: \"\",\n      organization: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {},\n      nameerr: \"\",\n      emailerr: \"\",\n      usernameerr: \"\",\n      organizationerr: \"\",\n      passworderr: \"\",\n      password2err: \"\",\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChangeName = (e) => {\n    if (validator.isEmpty(e.target.value)) {\n      this.setState({ nameerr: \"Name cannot be empty\" });\n    } else this.setState({ nameerr: \"\" });\n\n    this.setState({ name: e.target.value });\n  };\n  onChangeUsername = (e) => {\n    if (validator.isEmpty(e.target.value)) {\n      this.setState({ usernameerr: \"Username cannot be empty\" });\n    } else this.setState({ usernameerr: \"\" });\n    this.setState({ username: e.target.value });\n  };\n  onChangeOrganization = (e) => {\n    if (validator.isEmpty(e.target.value)) {\n      this.setState({ organizationerr: \"Organization cannot be empty\" });\n    } else {\n      this.setState({ organizationerr: \"\" });\n    }\n    this.setState({ organization: e.target.value });\n  };\n  onChangeEmail = (e) => {\n    if (!validator.isEmail(e.target.value)) {\n      this.setState({ emailerr: \"Invalid Email\" });\n    } else {\n      this.setState({ emailerr: \"\" });\n    }\n    this.setState({ email: e.target.value });\n  };\n  onChangePassword = (e) => {\n    if (!validator.isLength(e.target.value, { min: 6, max: 20 })) {\n      this.setState({\n        passworderr: \"Password length must be 6 to 20 characters\",\n      });\n    } else {\n      this.setState({\n        passworderr: \"\",\n      });\n    }\n    this.setState({ password: e.target.value });\n  };\n  onChangePassword2 = (e) => {\n    if (e.target.value !== this.state.password) {\n      this.setState({\n        password2err: \"Password does not match\",\n      });\n    } else {\n      this.setState({\n        password2err: \"\",\n      });\n    }\n    this.setState({ password2: e.target.value });\n  };\n\n  registerSubmit = (e) => {\n    e.preventDefault();\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n      organization: this.state.organization,\n      username: this.state.username,\n    };\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const {\n      name,\n      password,\n      password2,\n      email,\n      organization,\n      username,\n      nameerr,\n      usernameerr,\n      organizationerr,\n      passworderr,\n      emailerr,\n      password2err,\n    } = this.state;\n    return (\n      <Box position={\"relative\"}>\n        <Container\n          as={SimpleGrid}\n          maxW={\"7xl\"}\n          columns={{ base: 1, md: 2 }}\n          spacing={{ base: 10, lg: 32 }}\n          py={{ base: 10, sm: 20, lg: 32 }}\n        >\n          <Stack spacing={{ base: 10, md: 20 }}>\n          <center>\n            <Heading\n              lineHeight={2.2}\n              fontSize={{ base: \"3xl\", sm: \"4xl\", md: \"5xl\", lg: \"6xl\" }}\n              textColor={\"black\"}\n            >\n              VReqST\n            </Heading>\n            </center>\n            <center>\n            <Text color={\"black\"} fontSize={{ base: \"sm\", sm: \"2xl\" }}>\n              Now author clear requirement specifications with less hassle for Virtual Reality Software Products\n            </Text>\n            </center>\n            <center>\n              <img src={vr} alt=\"VR Image\" width=\"250px\" height=\"100px\"/>\n            </center>\n            <center>\n            <Text color={\"black\"} fontSize={{ base: \"md\", sm: \"2x2\" }}>\n              VReqST is a Tool support for writing clear requirement specifications while building Virtual Reality Software Products.It can be used by Requirement Analysts to record the elicited requirements with business stake-holders in detail.\n            </Text>\n            </center>\n          </Stack>\n          <Stack\n            bg={\"gray.50\"}\n            rounded={\"xl\"}\n            p={{ base: 4, sm: 6, md: 8 }}\n            spacing={{ base: 8 }}\n            maxW={{ lg: \"lg\" }}\n          >\n            <Stack spacing={4}>\n              <Heading\n                color={\"gray.800\"}\n                lineHeight={1.1}\n                fontSize={{ base: \"2xl\", sm: \"3xl\", md: \"4xl\" }}\n              >\n                Create your account\n              </Heading>\n            </Stack>\n            <Box as={\"form\"} mt={10}>\n              <Stack spacing={4}>\n                <FormControl isRequired isInvalid={!!nameerr}>\n                  <FormLabel color={\"gray.800\"} fontSize={\"sm\"}>\n                    Full Name\n                  </FormLabel>\n                  <Input\n                    placeholder=\"Enter your full name\"\n                    bg={\"gray.100\"}\n                    border={0}\n                    color={\"gray.500\"}\n                    _placeholder={{\n                      color: \"gray.500\",\n                    }}\n                    value={name}\n                    onChange={this.onChangeName}\n                    id=\"name\"\n                  />\n                  {!!nameerr && <FormErrorMessage>{nameerr}</FormErrorMessage>}\n                </FormControl>\n                <FormControl isRequired isInvalid={!!usernameerr}>\n                  <FormLabel color={\"gray.800\"} fontSize={\"sm\"}>\n                    User Name\n                  </FormLabel>\n                  <Input\n                    placeholder=\"Enter your username\"\n                    bg={\"gray.100\"}\n                    border={0}\n                    color={\"gray.500\"}\n                    _placeholder={{\n                      color: \"gray.500\",\n                    }}\n                    value={username}\n                    onChange={this.onChangeUsername}\n                    id=\"username\"\n                  />\n                  {!!usernameerr && (\n                    <FormErrorMessage>{usernameerr}</FormErrorMessage>\n                  )}\n                </FormControl>\n                <FormControl isRequired isInvalid={!!organizationerr}>\n                  <FormLabel color={\"gray.800\"} fontSize={\"sm\"}>\n                    Organization\n                  </FormLabel>\n                  <Input\n                    placeholder=\"Enter your organization\"\n                    bg={\"gray.100\"}\n                    border={0}\n                    color={\"gray.500\"}\n                    _placeholder={{\n                      color: \"gray.500\",\n                    }}\n                    value={organization}\n                    onChange={this.onChangeOrganization}\n                    id=\"organization\"\n                  />\n                  {!!organizationerr && (\n                    <FormErrorMessage>{organizationerr}</FormErrorMessage>\n                  )}\n                </FormControl>\n                <FormControl isRequired isInvalid={!!emailerr}>\n                  <FormLabel color={\"gray.800\"} fontSize={\"sm\"}>\n                    Email address\n                  </FormLabel>\n                  <Input\n                    placeholder=\"Enter your email\"\n                    bg={\"gray.100\"}\n                    border={0}\n                    color={\"gray.500\"}\n                    _placeholder={{\n                      color: \"gray.500\",\n                    }}\n                    type=\"email\"\n                    value={email}\n                    onChange={this.onChangeEmail}\n                    id=\"email\"\n                  />\n                  {!!emailerr && (\n                    <FormErrorMessage>{emailerr}</FormErrorMessage>\n                  )}\n                </FormControl>\n\n                <FormControl isRequired isInvalid={!!passworderr}>\n                  <FormLabel color={\"gray.800\"} fontSize={\"sm\"}>\n                    Password\n                  </FormLabel>\n                  <Input\n                    placeholder=\"Enter your password\"\n                    bg={\"gray.100\"}\n                    border={0}\n                    color={\"gray.500\"}\n                    _placeholder={{\n                      color: \"gray.500\",\n                    }}\n                    type=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={this.onChangePassword}\n                  />\n                  {!!passworderr && (\n                    <FormErrorMessage>{passworderr}</FormErrorMessage>\n                  )}\n                </FormControl>\n\n                <FormControl isRequired isInvalid={!!password2err}>\n                  <FormLabel color={\"gray.800\"} fontSize={\"sm\"}>\n                    Confirm Password\n                  </FormLabel>\n                  <Input\n                    placeholder=\"Enter your password\"\n                    bg={\"gray.100\"}\n                    border={0}\n                    color={\"gray.500\"}\n                    _placeholder={{\n                      color: \"gray.500\",\n                    }}\n                    type=\"password\"\n                    id=\"password2\"\n                    value={password2}\n                    onChange={this.onChangePassword2}\n                  />\n                  {!!password2err && (\n                    <FormErrorMessage>{password2err}</FormErrorMessage>\n                  )}\n                </FormControl>\n              </Stack>\n              <Box color={\"black\"} py={2}>\n                Already a user?{\" \"}\n                <CLink as={Link} color=\"red.400\" to={\"/login\"}>\n                  Login\n                </CLink>\n              </Box>\n              <Button\n                isLoading={this.state.loading}\n                loadingText=\"Logging in\"\n                fontFamily={\"heading\"}\n                mt={3}\n                w={\"full\"}\n                bgGradient=\"linear(to-r, red.400,pink.400)\"\n                color={\"white\"}\n                _hover={{\n                  bgGradient: \"linear(to-r, red.400,pink.400)\",\n                  boxShadow: \"xl\",\n                }}\n                onClick={this.registerSubmit}\n                disabled={\n                  !!nameerr ||\n                  !!organizationerr ||\n                  !!usernameerr ||\n                  !!emailerr ||\n                  !!passworderr ||\n                  !!password2err ||\n                  !name ||\n                  !organization ||\n                  !username ||\n                  !email ||\n                  !password ||\n                  !password2\n                }\n              >\n                Register\n              </Button>\n            </Box>\n          </Stack>\n        </Container>\n        {/* <Blur\n          position={\"absolute\"}\n          top={-10}\n          left={-150}\n          style={{ filter: \"blur (70px)\" }}\n        /> */}\n        <Blur\n          position={\"absolute\"}\n          top={-150}\n          left={-100}\n          style={{ filter: \"blur(70px)\" }}\n        />\n      </Box>\n    );\n  }\n}\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Flex,\n  Tag,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport JSZip from \"jszip\";\nimport { BiDownload } from \"react-icons/bi\";\n\nfunction ProjectRow(props) {\n  const {\n    name,\n    organization,\n    owner,\n    projid,\n    isFinished,\n    grammarName,\n    action,\n    asset,\n    scene,\n    custom,\n    timeline,\n    dash,\n  } = props;\n\n  let bgColor = useColorModeValue(\"gray.200\", !dash ? \"gray.800\" : \"gray.600\");\n\n  const nameColor = useColorModeValue(\"gray.900\", \"white\");\n\n  const downloadzip = () => {\n    var zip = new JSZip();\n    const scenejson = JSON.parse(scene);\n    const actionjson = JSON.parse(action);\n    const assetjson = JSON.parse(asset);\n    const customjson = JSON.parse(custom);\n    const timelinejson = JSON.parse(timeline);\n\n    zip.folder(name).file(\"scene.json\", JSON.stringify(scenejson, null, 2));\n    zip.folder(name).file(\"action.json\", JSON.stringify(actionjson, null, 2));\n    zip.folder(name).file(\"asset.json\", JSON.stringify(assetjson, null, 2));\n    zip.folder(name).file(\"custom.json\", JSON.stringify(customjson, null, 2));\n    zip.folder(name).file(\"timeline.json\", JSON.stringify(timelinejson, null, 2));\n\n    zip.generateAsync({ type: \"blob\" }).then(function (content) {\n      const href = URL.createObjectURL(content);\n\n      const link = document.createElement(\"a\");\n      link.href = href;\n      link.download = name + \".zip\";\n      document.body.appendChild(link);\n      link.click();\n\n      // clean up \"a\" element & remove ObjectURL\n      document.body.removeChild(link);\n      URL.revokeObjectURL(href);\n    });\n  };\n\n  return (\n    <Box p=\"24px\" bg={bgColor} my=\"15px\" borderRadius=\"12px\">\n      <Flex justify=\"space-between\" w=\"100%\">\n        <Flex direction=\"column\" maxWidth=\"70%\">\n          <Text\n            as={Link}\n            to={`/projects/${projid}`}\n            color={nameColor}\n            fontSize=\"md\"\n            fontWeight=\"bold\"\n            mb=\"10px\"\n          >\n            {name}\n          </Text>\n          {owner && (\n            <Text color=\"gray.500\" fontSize=\"sm\" fontWeight=\"semibold\">\n              Owner Name:{\" \"}\n              <Text as=\"span\" color=\"gray.600\">\n                {owner}\n              </Text>\n            </Text>\n          )}\n          {organization && (\n            <Text color=\"gray.500\" fontSize=\"sm\" fontWeight=\"semibold\">\n              Organization:{\" \"}\n              <Text as=\"span\" color=\"gray.600\">\n                {organization}\n              </Text>\n            </Text>\n          )}\n          {grammarName && (\n            <Text color=\"gray.500\" fontSize=\"sm\" fontWeight=\"semibold\">\n              Validator Name:{\" \"}\n              <Text as=\"span\" color=\"gray.600\">\n                {grammarName}\n              </Text>\n            </Text>\n          )}\n        </Flex>\n        <Flex flexDir={\"column\"}>\n          <Box>\n            {isFinished ? (\n              <Tag size={\"md\"} variant=\"solid\" colorScheme=\"green\">\n                Completed\n              </Tag>\n            ) : (\n              <Tag size={\"md\"} variant=\"solid\" colorScheme=\"yellow\">\n                Pending\n              </Tag>\n            )}\n          </Box>\n          {isFinished && !dash && (\n            <Box pt={3}>\n              <Button size=\"sm\" onClick={downloadzip} leftIcon={<BiDownload />}>\n                Zip\n              </Button>\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default ProjectRow;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  Box,\n  Button,\n  Flex,\n  Icon,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { FaPencilAlt, FaTrashAlt } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\n\nfunction FileRow(props) {\n  const { name, organization, owner, jsonid, isprivate, data, setdata, show, dash, own } = props;\n  const toast = useToast();\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgColor = useColorModeValue(\"#F8F9FA\", !dash ? \"gray.800\" : \"gray.600\");\n  const nameColor = useColorModeValue(\"gray.800\", \"white\");\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cancelRef = React.useRef();\n  const [loading, setLoading] = useState(false);\n\n  const ondelete = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    setLoading(true);\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      await axios.delete(\n        // `http://localhost:5002/api/json/${jsonid}`,\n        backend + `/api/json/${jsonid}`,\n        requestOptions\n      );\n      setdata(data.filter((d) => d._id !== jsonid));\n      toast({\n        title: \"File deleted successfully\",\n        status: \"success\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n      setLoading(false);\n      onClose();\n    }\n  };\n\n  return (\n    <Box p=\"24px\" bg={bgColor} my=\"15px\" borderRadius=\"12px\">\n      <Flex justify=\"space-between\" w=\"100%\">\n        <Flex direction=\"column\" maxWidth=\"70%\">\n          <Text color={nameColor} fontSize=\"md\" fontWeight=\"bold\" mb=\"10px\">\n            {name}\n          </Text>\n          {!dash && (\n            <>\n              <Text color=\"gray.500\" fontSize=\"sm\" fontWeight=\"semibold\">\n                Owner Name:{\" \"}\n                <Text as=\"span\" color=\"gray.600\">\n                  {owner}\n                </Text>\n              </Text>\n              <Text color=\"gray.500\" fontSize=\"sm\" fontWeight=\"semibold\">\n                Organization:{\" \"}\n                <Text as=\"span\" color=\"gray.600\">\n                  {organization}\n                </Text>\n              </Text>\n              { show && (\n                <Text color=\"gray.500\" fontSize=\"sm\" fontWeight=\"semibold\">\n                  Private File:{\" \"}\n                  <Text as=\"span\" color=\"gray.600\">\n                    {isprivate ? 'True' : 'False'}\n                  </Text>\n                </Text>\n              )}\n            </>\n          )}\n        </Flex>\n        {!dash && own && (\n          <>\n            <Flex\n              direction={{ sm: \"column\", md: \"row\" }}\n              align=\"flex-start\"\n              p={{ md: \"24px\" }}\n            >\n              <Button\n                p=\"0px\"\n                bg=\"transparent\"\n                mb={{ sm: \"10px\", md: \"0px\" }}\n                me={{ md: \"12px\" }}\n              >\n                <Flex\n                  color=\"red.500\"\n                  cursor=\"pointer\"\n                  align=\"center\"\n                  p=\"12px\"\n                  onClick={onOpen}\n                >\n                  <Icon as={FaTrashAlt} me=\"4px\" />\n                  <Text fontSize=\"sm\" fontWeight=\"semibold\">\n                    DELETE\n                  </Text>\n                </Flex>\n              </Button>\n              <Button\n                as={Link}\n                p=\"0px\"\n                bg=\"transparent\"\n                to={`/myfiles/${jsonid}`}\n              >\n                <Flex\n                  color={textColor}\n                  cursor=\"pointer\"\n                  align=\"center\"\n                  p=\"12px\"\n                >\n                  <Icon as={FaPencilAlt} me=\"4px\" />\n                  <Text fontSize=\"sm\" fontWeight=\"semibold\">\n                    EDIT\n                  </Text>\n                </Flex>\n              </Button>\n            </Flex>\n          </>\n        )}\n      </Flex>\n      {!dash && (\n        <AlertDialog\n          isOpen={isOpen}\n          leastDestructiveRef={cancelRef}\n          onClose={onClose}\n        >\n          <AlertDialogOverlay>\n            <AlertDialogContent>\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                Delete Validator\n              </AlertDialogHeader>\n\n              <AlertDialogBody>\n                Are you sure? You can't undo this action afterwards.\n              </AlertDialogBody>\n\n              <AlertDialogFooter>\n                <Button ref={cancelRef} onClick={onClose}>\n                  Cancel\n                </Button>\n                <Button\n                  colorScheme=\"red\"\n                  onClick={ondelete}\n                  ml={3}\n                  isLoading={loading}\n                >\n                  Delete\n                </Button>\n              </AlertDialogFooter>\n            </AlertDialogContent>\n          </AlertDialogOverlay>\n        </AlertDialog>\n      )}\n    </Box>\n  );\n}\n\nexport default FileRow;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  Stack,\n  Text,\n  useBreakpointValue,\n  useColorModeValue,\n  useToast,\n  VStack,\n  Link as CLink,\n  Image,\n  Center,\n} from \"@chakra-ui/react\";\nimport ProjectRow from \"../Project/ProjectRow\";\nimport { connect } from \"react-redux\";\nimport Axios from \"axios\";\nimport FileRow from \"../MyFiles/FileRow\";\nimport { Link } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\nimport banner from \"../../assets/banner.png\";\n\nconst Dashboard = ({ auth }) => {\n  const date = new Date();\n  let hours = date.getHours();\n  let greet = { message: \"\", image: \"\" };\n\n  // if (hours < 12) {\n  //   greet.message = \" Good Morning, \" + auth.user.name.split(\" \")[0];\n  //   greet.image = \"url(https://wallpapercave.com/wp/wp2833173.jpg)\";\n  // } else if (hours <= 17 && hours >= 12) {\n  //   greet.message = \" Good Afternoon, \" + auth.user.name.split(\" \")[0];\n  //   greet.image = \"url(https://wallpapercave.com/wp/wp2833173.jpg)\";\n  // } else {\n  //   greet.message = \" Good Evening, \" + auth.user.name.split(\" \")[0];\n  //   greet.image =\n  //     \"url(https://images.wallpaperscraft.com/image/single/sunset_dark_twilight_148787_1920x1080.jpg)\";\n  // }\n\n  const [recentProjects, setRecentProjects] = useState([]);\n  const [recentFiles, setRecentFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const getRecentProjects = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.get(\n        // \"http://localhost:5002/api/project/recent\",\n        backend + \"/api/project/recent\",\n        requestOptions\n      );\n\n      setRecentProjects(res.data);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  };\n\n  const getRecentFiles = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.get(\n        // \"http://localhost:5002/api/json/recent\",\n        backend + \"/api/json/recent\",\n        requestOptions\n      );\n\n      setRecentFiles(res.data);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const f = async () => {\n      setLoading(true);\n      await getRecentProjects();\n      await getRecentFiles();\n      setLoading(false);\n    };\n    f();\n  }, []);\n\n  return (\n    <Box minH={\"85vh\"}>\n      <Stack minH={\"25vh\"} direction={{ base: \"column\", md: \"row\" }}>\n        <Flex p={8} flex={1} align={\"center\"} justify={\"center\"}>\n          <Stack spacing={6} w={\"full\"} maxW={\"lg\"}>\n            <Heading fontSize={{ base: \"3xl\", md: \"4xl\", lg: \"5xl\" }}>\n              <Text\n                color={\"black\"}\n                as={\"span\"}\n                position={\"relative\"}\n                _after={{\n                  content: \"''\",\n                  width: \"full\",\n                  height: useBreakpointValue({ base: \"20%\", md: \"30%\" }),\n                  position: \"absolute\",\n                  bottom: 1,\n                  left: 0,\n                  bg: \"blue.400\",\n                  zIndex: -1,\n                }}\n              >\n                Hello,{\" \"}\n              </Text>\n              <Text color={\"blue.400\"} as={\"span\"}>\n                {auth.user.name.split(\" \")[0]}! 👋\n              </Text>{\" \"}\n            </Heading>\n          </Stack>\n        </Flex>\n        <Flex flex={1}>\n          <Image\n            alt={\"Login Image\"}\n            objectFit={\"cover\"}\n            src={banner}\n            maxW='300px'\n          />\n        </Flex>\n      </Stack>\n      <Grid templateColumns='repeat(2, 1fr)' gap={4} p={8}>\n        <GridItem\n          maxH='25em'\n          overflow='auto'\n          bg={useColorModeValue(\"white\", \"gray.800\")}\n          boxShadow={\"lg\"}\n          p={8}\n          rounded={\"xl\"}\n          align={\"center\"}\n          pos={\"relative\"}\n          _after={{\n            content: `\"\"`,\n            w: 0,\n            h: 0,\n            borderLeft: \"solid transparent\",\n            borderLeftWidth: 16,\n            borderRight: \"solid transparent\",\n            borderRightWidth: 16,\n            borderTop: \"solid\",\n            borderTopWidth: 16,\n            borderTopColor: useColorModeValue(\"white\", \"white\"),\n            pos: \"absolute\",\n            bottom: \"-16px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n          }}\n        >\n          <Heading pt={5} pl={5} fontSize='2xl'>\n            Recent Projects\n          </Heading>\n          <Box p={5}>\n            {recentProjects.length > 0 ? (\n              recentProjects.map((p) => (\n                <ProjectRow\n                  key={p._id}\n                  name={p.name}\n                  projid={p._id}\n                  isFinished={p.isFinished}\n                  dash\n                />\n              ))\n            ) : (\n              <>\n                <Text>No recent projects!</Text>\n                <CLink as={Link} to=\"/projects\">Create project</CLink>\n              </>\n            )}\n          </Box>\n        </GridItem>\n        <GridItem\n          overflow='auto'\n          bg={useColorModeValue(\"white\", \"gray.800\")}\n          boxShadow={\"lg\"}\n          p={8}\n          rounded={\"xl\"}\n          align={\"center\"}\n          maxH='25em'\n          pos={\"relative\"}\n          _after={{\n            content: `\"\"`,\n            w: 0,\n            h: 0,\n            borderLeft: \"solid transparent\",\n            borderLeftWidth: 16,\n            borderRight: \"solid transparent\",\n            borderRightWidth: 16,\n            borderTop: \"solid\",\n            borderTopWidth: 16,\n            borderTopColor: useColorModeValue(\"white\", \"gray.800\"),\n            pos: \"absolute\",\n            bottom: \"-16px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n          }}\n        >\n          <Heading pt={5} pl={5} fontSize='2xl'>\n            Recent Validators\n          </Heading>\n          <Box p={5}>\n            {recentFiles.length > 0 ? (\n              recentFiles.map((p) => (\n                <Link to={\"/myfiles\"}>\n                  <FileRow name={p.name} dash />\n                </Link>\n              ))\n            ) : (\n              <>\n                <Text>No recent Validators!</Text>\n                <CLink as={Link} to='/myfiles'>Add Validator</CLink>\n              </>\n            )}\n          </Box>\n        </GridItem>\n      </Grid>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport AceEditor from \"react-ace\";\n\nimport {\n  Box,\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Button,\n  Center,\n  Flex,\n  FormControl,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  Spinner,\n  Stack,\n  Switch,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-terminal\";\nimport { FaSave, FaTimes } from \"react-icons/fa\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\n\nimport isJson from \"../../utils/checkjson\";\nimport { check } from \"express-validator\";\n\nconst scenefile = require(\"../default/scene.txt\")\nconst assetfile = require(\"../default/asset.txt\")\nconst actionfile = require(\"../default/action.txt\")\nconst timelinefile = require(\"../default/timeline.txt\")\n\nconst EditFile = () => {\n  const [filename, setfilename] = useState(\"\");\n  const [data, setdata] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [grammarfor, setGrammarfor] = useState(\"\");\n  const [privateFile, setPrivateFile] = useState(false);\n  const [flag, setflag] = useState(false);\n  const [isSaved, setSaved] = useState(true);\n\n  const [scenedef, setScenedef] = useState('');\n  const [assetdef, setAssetdef] = useState('');\n  const [actiondef, setActiondef] = useState('');\n  const [timelinedef, setTimelinedef] = useState('');\n\n  const [scenedata, setSceneData] = useState('');\n  const [assetdata, setAssetData] = useState('');\n  const [actiondata, setActionData] = useState('');\n  const [timelinedata, setTimelineData] = useState('');\n\n  const history = useHistory();\n  const toast = useToast();\n  let { fileid } = useParams();\n\n  const fetchdata = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await axios.get(\n        // `http://localhost:5002/api/json/${fileid}`,\n        backend + `/api/json/${fileid}`,\n        requestOptions\n      );\n\n      if (res.data.scene != null) setSceneData(res.data.scene);\n      if (res.data.asset != null) setAssetData(res.data.asset);\n      if (res.data.action != null) setActionData(res.data.action);\n      if (res.data.timeline != null) setTimelineData(res.data.timeline);\n\n      setfilename(res.data.name);\n      setGrammarfor(res.data.grammarfor);\n      setPrivateFile(res.data.private);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchDefault = async () => {\n    try {\n      const response1 = await fetch(scenefile);\n      if (!response1.ok) {\n        throw new Error('Network response was not ok.');\n      }\n      const data1 = await response1.text();\n      setScenedef(data1);\n\n      const response2 = await fetch(assetfile);\n      if (!response2.ok) {\n        throw new Error('Network response was not ok.');\n      }\n      const data2 = await response2.text();\n      setAssetdef(data2);\n\n      const response3 = await fetch(actionfile);\n      if (!response3.ok) {\n        throw new Error('Network response was not ok.');\n      }\n      const data3 = await response3.text();\n      setActiondef(data3);\n\n      const response4 = await fetch(timelinefile);\n      if (!response4.ok) {\n        throw new Error('Network response was not ok.');\n      }\n      const data4 = await response4.text();\n      setTimelinedef(data4);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true)\n    fetchdata();\n    fetchDefault();\n    setLoading(false);\n  }, []);\n\n  function onChange(newValue) {\n    setdata(newValue);\n    setSaved(false);\n  }\n\n  const handleGrammar = (value) => {\n    setflag(false);\n    setGrammarfor(value);\n    if (value === \"scene\") setdata(scenedata);\n    if (value === \"asset\") setdata(assetdata);\n    if (value === \"action\") setdata(actiondata);\n    if (value === \"timeline\") setdata(timelinedata);\n  }\n\n  const handleSwitch = () => {\n    setSaved(false);\n    if (!flag) {\n      if (grammarfor === \"scene\") setdata(scenedef);\n      if (grammarfor === \"asset\") setdata(assetdef);\n      if (grammarfor === \"action\") setdata(actiondef);\n      if (grammarfor === \"timeline\") setdata(timelinedef);\n      setflag(true)\n    }\n    else {\n      // setdata(\"\");\n      if (grammarfor === \"scene\") setdata(scenedata);\n      if (grammarfor === \"asset\") setdata(assetdata);\n      if (grammarfor === \"action\") setdata(actiondata);\n      if (grammarfor === \"timeline\") setdata(timelinedata);\n      setflag(false)\n    }\n  }\n\n  const saveFiles = async () => {\n    if (!isJson(data)) {\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    setLoading(true);\n\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n\n      let url = backend;\n      if (grammarfor === \"scene\") {\n        url = url + `/api/json/${fileid}/scene`;\n        setSceneData(data);\n      }\n      if (grammarfor === \"action\") {\n        url = url + `/api/json/${fileid}/action`;\n        setActionData(data);\n      }\n      if (grammarfor === \"asset\") {\n        url = url + `/api/json/${fileid}/asset`;\n        setAssetData(data);\n      }\n      if (grammarfor === \"timeline\") {\n        url = url + `/api/json/${fileid}/timeline`;\n        setTimelineData(data);\n      }\n      setSaved(true);\n\n      await axios.patch(\n        url,\n        { data, name: filename, grammarfor },\n        requestOptions\n      );\n      // history.push(\"/myfiles\");\n      setLoading(false);\n      toast({\n        title: \"File updated successfully\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    setflag(false);\n  }\n\n  return loading ? (\n    <>\n      <Flex\n        width={\"100vw\"}\n        height={\"85vh\"}\n        justifyContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      </Flex>\n    </>\n  ) : (\n    <Box minH={\"85vh\"}>\n      <Breadcrumb\n        spacing=\"8px\"\n        pt={5}\n        pl={5}\n        separator={<ChevronRightIcon color=\"gray.500\" />}\n      >\n        <BreadcrumbItem>\n          <BreadcrumbLink as={Link} to=\"/myfiles\">\n            My Validators\n          </BreadcrumbLink>\n        </BreadcrumbItem>\n\n        <BreadcrumbItem isCurrentPage>\n          <BreadcrumbLink>{filename}</BreadcrumbLink>\n        </BreadcrumbItem>\n      </Breadcrumb>\n      <Flex\n        flexDir={\"column\"}\n        justifyContent={\"center\"}\n        alignItems=\"center\"\n        py=\"50px\"\n      >\n        <Flex\n          boxShadow={\"xl\"}\n          p={8}\n          rounded={\"xl\"}\n          align={\"center\"}\n          borderWidth={\"1px\"}\n          borderColor=\"gray.400\"\n          mb={5}\n        >\n          <Flex justifyContent=\"center\" flexDir={\"column\"}>\n            <RadioGroup onChange={handleGrammar} value={grammarfor} py={2}>\n              <Stack direction=\"row\">\n                <Radio isReadOnly={!isSaved} value=\"scene\">Scene</Radio>\n                <Radio isReadOnly={!isSaved} value=\"asset\">Asset</Radio>\n                <Radio isReadOnly={!isSaved} value=\"action\">Action</Radio>\n                <Radio isReadOnly={!isSaved} value=\"timeline\">Timeline</Radio>\n              </Stack>\n            </RadioGroup>\n            <FormControl display=\"flex\" justifyContent=\"center\" pb={2}>\n              <FormLabel htmlFor=\"public-file\" mb=\"0\">\n                DEFAULT\n              </FormLabel>\n              <Switch\n                id=\"public-file\"\n                defaultChecked={false}\n                isChecked={flag}\n                onChange={handleSwitch}\n              />\n            </FormControl>\n          </Flex>\n        </Flex>\n\n        <Box mx={\"40px\"}>\n          <AceEditor\n            fontSize={16}\n            showPrintMargin={true}\n            showGutter={true}\n            highlightActiveLine={true}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: false,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n            mode=\"json\"\n            theme=\"terminal\"\n            onChange={onChange}\n            value={data}\n            name=\"grammar-editor\"\n            id=\"grammar-editor\"\n            wrapEnabled\n            height=\"40em\"\n            width=\"60em\"\n          />\n        </Box>\n        <Center minW=\"max-content\" justifyContent={\"center\"} my={\"20px\"}>\n          <Button\n            leftIcon={<FaSave />}\n            colorScheme=\"yellow\"\n            // disabled={!filename || !data}\n            disabled={isSaved}\n            onClick={() => {saveFiles()}}\n            isLoading={loading}\n          >\n            Save Validator\n          </Button>\n          <Button\n            leftIcon={<FaTimes />}\n            colorScheme=\"yellow\"\n            disabled={!isSaved}\n            onClick={() => {\n              history.push(\"/myfiles\");\n            }}\n            isLoading={loading}\n          >\n            Exit\n          </Button>\n        </Center>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default EditFile;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Button,\n  Center,\n  Flex,\n  Heading,\n  Image,\n  Spinner,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { backend } from \"../../server_urls\";\nimport empty from \"../../assets/empty.png\";\n\nimport FileRow from \"./FileRow\";\n\nconst MyFiles = () => {\n  const [data, setdata] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const getmyfiles = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await axios.get(\n        // \"http://localhost:5002/api/json/my\",\n        backend + \"/api/json/my\",\n        requestOptions\n      );\n\n      setdata(res.data);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    const f = async () => {\n      setLoading(true);\n      await getmyfiles();\n      setLoading(false);\n    };\n    f();\n  }, []);\n\n  return loading ? (\n    <>\n      <Flex\n        width={\"100vw\"}\n        height={\"85vh\"}\n        justifyContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      </Flex>\n    </>\n  ) : (\n    <Box minH=\"85vh\">\n      <Flex justifyContent={\"space-between\"} mx={\"60px\"} py={\"30px\"}>\n        <Heading>My Validators</Heading>\n        <Button colorScheme=\"gray\" as={Link} to=\"/myfiles/new\" border=\"1px\">\n          Add Validator\n        </Button>\n      </Flex>\n      <Flex direction=\"column\" mx={\"60px\"}>\n        {data.length > 0 ? (\n          data.map((row) => {\n            return (\n              <FileRow\n                key={row._id}\n                name={row.name}\n                organization={row.ownerid.organization}\n                owner={row.ownerid.name}\n                jsonid={row._id}\n                isprivate={row.private}\n                data={data}\n                setdata={setdata}\n                show={true}\n                own\n              />\n            );\n          })\n        ) : (\n          <Center>\n            <Image src={empty} maxW=\"300px\" />\n          </Center>\n        )}\n      </Flex>\n    </Box>\n  );\n};\n\nexport default MyFiles;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Heading, Text, Button, Center } from \"@chakra-ui/react\";\n\nexport default function NotFound() {\n  return (\n    <Center flexDir={\"column\"} textAlign=\"center\" py={10} px={6} minH=\"85vh\">\n      <Heading\n        display=\"inline-block\"\n        as=\"h2\"\n        size=\"2xl\"\n        bgGradient=\"linear(to-r, yellow.400, yellow.600)\"\n        backgroundClip=\"text\"\n      >\n        404\n      </Heading>\n      <Text fontSize=\"18px\" mt={3} mb={2}>\n        Page Not Found\n      </Text>\n      <Text color={\"gray.500\"} mb={6}>\n        The page you're looking for does not seem to exist\n      </Text>\n\n      <Button\n        as={Link}\n        to=\"/dashboard\"\n        colorScheme=\"yellow\"\n        bgGradient=\"linear(to-r, yellow.400, yellow.500, yellow.600)\"\n        color=\"white\"\n        variant=\"solid\"\n      >\n        Go to Home\n      </Button>\n    </Center>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { backend } from \"../../server_urls\";\n\nconst Profile = (props) => {\n  const toast = useToast();\n  const [name, setname] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [username, setusername] = useState(\"\");\n  const [organization, setOrganization] = useState(\"\");\n\n  useEffect(() => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n\n    const getuser = async () => {\n      try {\n        const requestOptions = {\n          headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n        };\n        const res = await axios.get(\n          // \"http://localhost:5002/api/users/me\",\n          backend + \"/api/users/me\",\n          requestOptions\n        );\n        setname(res?.data.name);\n        setemail(res?.data.email);\n        setOrganization(res?.data.organization);\n        setusername(res?.data.username);\n      } catch (error) {\n        toast({\n          title: \"Something went wrong\",\n          status: \"error\",\n          duration: 10000,\n          isClosable: true,\n          position: \"top\",\n        });\n        console.log(error);\n      }\n    };\n\n    getuser();\n  }, []);\n  return (\n    <Flex\n      minH={\"85vh\"}\n      align={\"center\"}\n      justify={\"center\"}\n      bg={useColorModeValue(\"gray.50\", \"gray.800\")}\n    >\n      <Stack\n        spacing={4}\n        w={\"full\"}\n        maxW={\"md\"}\n        bg={useColorModeValue(\"white\", \"gray.700\")}\n        rounded={\"xl\"}\n        boxShadow={\"lg\"}\n        p={6}\n        my={12}\n      >\n        <Heading lineHeight={1.1} fontSize={{ base: \"2xl\", sm: \"3xl\" }}>\n          User Profile Edit\n        </Heading>\n        <FormControl id=\"userName\" isRequired>\n          <FormLabel>Full Name</FormLabel>\n          <Input\n            placeholder=\"Full Name\"\n            _placeholder={{ color: \"gray.500\" }}\n            value={name}\n            onChange={(e) => setname(e.target.value)}\n            type=\"text\"\n          />\n        </FormControl>\n        <FormControl id=\"email\" isReadOnly>\n          <FormLabel>Email address</FormLabel>\n          <Input\n            placeholder=\"your-email@example.com\"\n            type=\"email\"\n            backgroundColor=\"lightgray\"\n            value={email}\n          />\n        </FormControl>\n        <FormControl id=\"username\" isRequired>\n          <FormLabel>Username</FormLabel>\n          <Input\n            placeholder=\"UserName\"\n            _placeholder={{ color: \"gray.500\" }}\n            type=\"text\"\n            value={username}\n            onChange={(e) => setusername(e.target.value)}\n          />\n        </FormControl>\n        <FormControl id=\"organization\" isReadOnly>\n          <FormLabel>Organization</FormLabel>\n          <Input\n            placeholder=\"Organization\"\n            type=\"text\"\n            value={organization}\n            backgroundColor=\"lightgray\"\n          />\n        </FormControl>\n\n        <Stack spacing={6} direction={[\"column\", \"row\"]}>\n          {/* <Button\n            bg={\"blue.400\"}\n            color={\"white\"}\n            w=\"full\"\n            _hover={{\n              bg: \"blue.500\",\n            }}\n          >\n            Submit\n          </Button> */}\n        </Stack>\n      </Stack>\n    </Flex>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(Profile);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Flex,\n  Spinner,\n  useToast,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalFooter,\n  Input,\n  FormControl,\n  FormLabel,\n  Box,\n  Stack,\n  Heading,\n  Center,\n  Image,\n  Select,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { backend } from \"../../server_urls\";\nimport empty from \"../../assets/empty.png\";\n\nimport ProjectRow from \"./ProjectRow\";\nimport { FaPlus } from \"react-icons/fa\";\n\nconst Project = () => {\n  const [data, setdata] = useState([]);\n  const [files, setfiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [projectName, setProjectName] = useState(\"\");\n  const [grammarName, setGrammarName] = useState(\"\");\n  const [submitLoading, setSubmitLoading] = useState(false);\n\n  const onCreate = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    setSubmitLoading(true);\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await axios.post(\n        backend + \"/api/project/new\",\n        { name: projectName, grammarName: grammarName },\n        requestOptions\n      );\n      setdata((olddata) => [...olddata, res.data]);\n      setProjectName(\"\")\n      setGrammarName(\"\")\n      onClose();\n      setSubmitLoading(false);\n      toast({\n        title: \"Project created successfully\",\n        status: \"success\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n    } catch (error) {\n      setSubmitLoading(false);\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  };\n\n  const getmyprojects = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await axios.get(\n        // \"http://localhost:5002/api/project/my\",\n        backend + \"/api/project/my\",\n        requestOptions\n      );\n\n      setdata(res.data);\n      // console.log(data);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  };\n\n  const getfiles = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    // let url = `http://localhost:5002/api/json/timeline`;\n    let url = backend + `/api/json/timeline`;\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await axios.get(url, requestOptions);\n      // console.log(res);\n\n      setfiles(res.data);\n      // alert(files)\n    } catch (error) {\n      toast({\n        title: \"Something went wrong 1\",  //Goes wrong\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const f = async () => {\n      setLoading(true);\n      await getmyprojects();\n      await getfiles();\n      setLoading(false);\n    };\n    f();\n  }, []);\n\n  const handleGrammar = (e) => {\n    setGrammarName(e.target.value)\n  }\n\n  return loading ? (\n    <>\n      <Flex\n        width={\"100vw\"}\n        height={\"85vh\"}\n        justifyContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      </Flex>\n    </>\n  ) : (\n    <Box minH=\"85vh\">\n      <Flex justifyContent={\"space-between\"} mx={\"60px\"} py={\"30px\"}>\n        <Heading>My Projects</Heading>\n        <Button leftIcon={<FaPlus />} colorScheme=\"gray\" onClick={onOpen} border=\"1px\">\n          Create Project\n        </Button>\n      </Flex>\n      <Flex direction=\"column\" mx={\"60px\"}>\n        {data.length > 0 ? (\n          data.map((row) => {\n            return (\n              <ProjectRow\n                key={row._id}\n                name={row.name}\n                organization={row.ownerid.organization}\n                owner={row.ownerid.name}\n                projid={row._id}\n                isFinished={row.isFinished}\n                grammarName={row.grammarName}\n                scene={row.scene}\n                asset={row.asset}\n                action={row.action}\n                custom={row.custom}\n                timeline={row.timeline}\n              />\n            );\n          })\n        ) : (\n          <Center>\n            <Image src={empty} maxW=\"300px\" />\n          </Center>\n        )}\n      </Flex>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Create new project</ModalHeader>\n          <ModalCloseButton />\n          <Box p={10}>\n            <FormControl isRequired>\n              <FormLabel>Project Name</FormLabel>\n              <Input\n                value={projectName}\n                onChange={(e) => setProjectName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl isRequired>\n              <FormLabel>Model Template Validator</FormLabel>\n              <Select value={grammarName} onChange={handleGrammar}>\n                <option value=\"\">Select</option>\n                {files.map((p, index) => (\n                  <option key={index} value={p.name}>\n                    {p.name}\n                  </option>\n                ))}\n              </Select>\n            </FormControl>\n          </Box>\n          <ModalFooter>\n            <Stack spacing={2} direction=\"row\">\n              <Button\n                onClick={onCreate}\n                disabled={submitLoading || !projectName || !grammarName}\n                isLoading={submitLoading}\n                loadingText=\"Creating\"\n                colorScheme={\"whatsapp\"}\n              >\n                Create\n              </Button>\n              <Button onClick={onClose}>Close</Button>\n            </Stack>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport { Text, Button } from \"@chakra-ui/react\";\nimport { useDrag } from \"react-dnd\";\n\nfunction Behaviour({ obj, reorder }) {\n\tconst [{ isDragging }, drag] = useDrag(() => ({\n\t\ttype: \"behaviour\",\n\t\titem: { obj: obj },\n\t\tcollect: (monitor) => ({\n\t\t\tisDragging: monitor.isDragging(),\n\t\t}),\n\t}));\n\n\treturn (\n\t\t<Button\n\t\t\tbackgroundColor='blue.200'\n\t\t\theight={10}\n\t\t\twidth='auto'\n\t\t\tdisabled={reorder}\n\t\t>\n\t\t\t<Text\n\t\t\t\tref={drag}\n\t\t\t\tfontSize='lg'\n\t\t\t>\n\t\t\t\t{obj.rulename}\n\t\t\t</Text>\n\t\t</Button>\n\t);\n}\n\nexport default Behaviour;","import {\n  Box,\n  Button,\n  // Divider,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  Input,\n  List,\n  ListIcon,\n  ListItem,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalOverlay,\n  // Select,\n  Spinner,\n  Stack,\n  Tag,\n  Text,\n  // Tooltip,\n  useDisclosure,\n  useToast,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  FormControl,\n  // Textarea,\n  // VStack\n} from \"@chakra-ui/react\";\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { FaExclamationCircle } from \"react-icons/fa\";\nimport { BiDownload } from \"react-icons/bi\";\nimport { CheckCircleIcon } from \"@chakra-ui/icons\";\nimport { useParams } from \"react-router-dom\";\nimport { useDrop } from 'react-dnd';\nimport { validation_server, backend } from \"../../server_urls\";\n\nimport isJson from \"../../utils/checkjson\";\nimport e from \"cors\";\nimport semantics from \"../../utils/syntax.json\";\nimport Behaviour from \"./Behaviour\";\nimport { Link } from \"react-router-dom\";\n\nlet errors = [];\nlet rules = [];\nlet valid_rule = [];\nlet grammarDataArray = [];\nlet flag = false;\nlet fl = false;\n\nconst tipcolors = {\n  number: \"orange\",\n  object: \"green\",\n  boolean: \"red\",\n  string: \"yellow\",\n  array: \"blue\",\n};\n\nconst jsonValidator = (grammar, validating) => {\n  const keys = Object.keys(grammar);\n  const keys22 = Object.keys(validating);\n\n  const grammarArray = Object.keys(grammar).filter(\n    (value) => !Object.keys(validating).includes(value)\n  );\n\n  const extraEntries = Object.keys(validating).filter(\n    (value) => !Object.keys(grammar).includes(value)\n  );\n\n  extraEntries.map((en) => {\n    let app = 1;\n\n    for (let i = 0; i < keys.length; i++) {\n      if (keys[i] === en || grammar[keys[i]].root === en || grammar[keys[i]].proot === en) \n        app = 0;\n    }\n    if (app) {\n      errors.push(`\"${en}\" is invalid key in the JSON`);\n    }\n  });\n\n  grammarArray.map((en) => {\n    let app = 1;\n    for (let i = 0; i < keys22.length; i++) {\n      if (en === keys22[i] || grammar[en].root === keys22[i] || grammar[en].proot === keys22[i]) {\n        app = 0;\n      }\n    }\n    if (app === 1) {\n      errors.push(\n        `\"${en}\" is a mandatory field! Please add the field with ${grammar[en].typeof} type`\n      );\n    }\n  })\n\n  for (let i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (grammar[key].hasOwnProperty('proot')) {\n      let a = validating[grammar[key].proot];\n      for (let i = 0; i < a.length; i++) {\n        let c = a[i];\n        if (c.hasOwnProperty(grammar[key].root)) {\n          if (typeof c[grammar[key].root][key] === grammar[key].typeof) {\n          }\n          else {\n            if (typeof c[grammar[key].root][key] === \"undefined\") {\n              errors.push(\n                `\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`\n              );\n            }\n            else {\n              errors.push(\n                ` \"${key}\" has an invalid type of '${typeof c[grammar[key].root][key]}'. Expected type of ${grammar[key].typeof}`\n              );\n            }\n          }\n        }\n      }\n    }\n    else if (grammar[key].hasOwnProperty('repeat') && grammar[key].repeat === \"allow\") {\n      let a = grammar[key].root;\n      var obje = Object.keys(validating);\n      // let found = obje.indexOf(a);\n\n      if (typeof validating[a] === \"object\") {\n        for (let i = 0; i < validating[a].length; i++) {\n          if (typeof validating[a][i][key] === grammar[key].typeof || (typeof validating[a][i][key] === \"object\" && grammar[key].typeof === \"array\")) {\n          }\n          else {\n            if (typeof validating[a][i][key] === \"undefined\") {\n              errors.push(\n                `\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`\n              );\n            }\n            else {\n              errors.push(\n                ` \"${key}\" has an invalid type of '${typeof validating[a][i][\n                key\n                ]}'. Expected type of ${grammar[key].typeof}`\n              );\n            }\n          }\n        }\n      }\n    }\n    else {\n      if (grammar[key].root === 'null' || grammar[key].root === 'undefined' || (!grammar[key].hasOwnProperty('root'))) {\n        if (typeof validating[key] === \"undefined\") {\n          continue;\n        }\n\n        // Handling nested objects recursively\n        if (\n          typeof validating[key] === \"object\" &&\n          grammar[key].typeof === \"object\"\n        ) {\n          continue;\n        }\n\n        if (typeof validating[key] !== grammar[key].typeof) {\n          errors.push(\n            ` \"${key}\" has an invalid type of '${typeof validating[\n            key\n            ]}'. Expected type of ${grammar[key].typeof}`\n          );\n        }\n        else {\n          // alert(\"sucess\");\n        }\n\n        if (\n          typeof validating[key] === \"string\" &&\n          typeof validating[key] === grammar[key].typeof &&\n          grammar[key].req === \"mandatory\" &&\n          validating[key].length === 0\n        ) {\n          errors.push(`\"${key}\" is mandatory, empty string is not allowed`);\n        }\n      }\n      else {\n        let a = grammar[key].root;\n        if (false) {\n          for (let i = 0; i < validating[a].length; i++) {\n            if (typeof validating[a][i].key === grammar[key].typeof) {\n              alert(\"Sucess\");\n            }\n            else {\n              //alert(\"Failure\");\n              //errors.push(\"kindly see the json syntax\");\n              errors.push(`\"${key}\" has invalid type, expected \"${grammar[key].typeof}\"`);\n            }\n          }\n        }\n        else {\n          var b = validating[a];\n          //alert(a);\n          let c = Object.keys(b);\n          let found = c.indexOf(key)\n          if (typeof validating[a][c[found]] === grammar[key].typeof || (typeof validating[a][c[found]] === \"object\" && grammar[key].typeof === \"array\")) {\n            //alert(\"Sucess!!!!!!\");\n          }\n          else {\n            if (typeof validating[a][c[found]] === \"undefined\") {\n              errors.push(\n                `\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`\n              );\n\n            }\n            else {\n              errors.push(\n                ` \"${key}\" has an invalid type of '${typeof validating[a][c[found]]\n                }'. Expected type of ${grammar[key].typeof}`\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  if (errors.length > 0) {\n    console.log(errors);\n    return true;\n  }\n  return false;\n};\n\nconst ProjectPageContent = ({\n  stepslen,\n  nextStep,\n  prevStep,\n  reset,\n  activeStep,\n  scene,\n  action,\n  asset,\n  projectname,\n  timeline,\n  custom,\n}) => {\n  const toast = useToast();\n  const { projectid } = useParams();\n  const jwttoken = localStorage.getItem(\"jwtToken\");\n\n  let [val, setValue] = React.useState(\"\");\n  const [files, setfiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [data, setdata] = useState(\"\");\n  const [grammarid, setGrammarid] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [grammarbundle, setGrammarbundle] = useState({});\n  const [displayErrors, setDisplayErrors] = useState([]);\n  const [rule_list, setRuleList] = useState([]);\n  const [names, setNames] = useState([]);\n  const [arr, setArr] = useState([]);\n  const [idx, setIdx] = useState(0);\n\n  const [downloadable, setDownloadable] = useState(false);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [description, setDescription] = useState(\"\");\n  const [perdata, setPerdata] = useState(\"\");\n  const [seed, setSeed] = useState(0);\n  const [rulename, setRulename] = useState(\"\");\n  const [textPointer, setTextPointer] = useState({\"row\": 0, \"column\": 0});\n\n  const [position, setPosition] = useState(0);\n  const [savebutton, setSavebutton] = useState(false);\n  const [rule, setRule] = useState({});\n  const [logic, setLogic] = useState(\"\");\n  const [board, setBoard] = useState([]);\n  const [reorder, setReorder] = useState(false);\n\n\tconst [{ isOver, canDrop }, drop] = useDrop(() => ({\n\t\taccept: \"behaviour\",\n\t\tdrop: (item) => setBoard((board) => !board.includes(item.obj) ? [...board, item.obj] : board),\n\t\tcollect: (monitor) => ({\n\t\t\tisOver: monitor.isOver(),\n\t\t\tcanDrop: monitor.canDrop(),\n\t\t})\n\t}));\n\n\tconst handleReorder = (dragIndex, hoverIndex) => {\n\t\tconst dragged = board[dragIndex];\n\t\tconst newBoard = [...board];\n\t\tnewBoard.splice(dragIndex, 1);\n\t\tnewBoard.splice(hoverIndex, 0, dragged);\n\t\tsetBoard(newBoard);\n\t}\n\n  const convertPointer = (pointer, lines) => {\n    let pos = 0;\n    for(let i=0; i<=pointer.row - 1; i++) {\n      pos += lines[i].length;\n      if(lines[i].length === 0)\n        pos+=1;\n    }\n    pos += pointer.column;\n    if(pointer.column === 0)\n      pos+=1;\n    setPosition(pos);\n  }\n\n  const getFiles = async () => {\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.get(\n        // `http://localhost:5002/api/json/timeline`,\n        backend + \"/api/json/timeline\",\n        requestOptions\n      );\n\n      const requestOption = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res2 = await Axios.get(\n        // `http://localhost:5002/api/project/${projectid}/grammarName`,\n        backend + `/api/project/${projectid}/grammarName`,\n        requestOption\n      );\n      setfiles(res.data);\n\n      res.data.map((p) => {\n        if (p.name === res2.data.grammarName) {\n          if (grammarDataArray.length !== 5) {\n            grammarDataArray.push(p.scene);\n            grammarDataArray.push(p.asset);\n            grammarDataArray.push(p.action);\n            grammarDataArray.push(p.custom);\n            grammarDataArray.push(p.timeline);\n          }\n        }\n      })\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",  //Goes wrong\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  };\n\n  const getRules = async () => {\n    const res_rules = await Axios.post(\n      // \"http://localhost:5002/api/custom/get-custom-rules\",\n      backend + \"/api/custom/get-custom-rules\",\n      {\n        headers: {\n          \"Content-Type\": \"application/json\", \n          token: jwttoken \n        },\n        data: {\n          project_id: projectid\n        }\n      }\n    );\n    setRuleList(res_rules.data);\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    getFiles();\n    getRules();\n    if (activeStep === 0) {\n      setdata(scene);\n      fl = false;\n      if (isJson(scene)) {\n        setDownloadable(true);\n      }\n    }\n    if (activeStep === 1) {\n      if (asset === '') {\n        setNames([]);\n        setArr([]);\n        setdata('');\n      } else {\n        const myobjs = JSON.parse(asset);\n        let all_names = []\n        let tarr = myobjs.articles\n        myobjs.articles.map((c,i)=>{\n          all_names.push(c._objectname);\n        })\n        setNames(all_names);\n        setArr(tarr);\n        setdata(JSON.stringify(tarr[idx], null, '\\t'));\n      }\n      // setdata(asset);\n      fl = false;\n      if (isJson(asset)) {\n        setDownloadable(true);\n      }\n    }\n    if (activeStep === 2) {\n      if (action === '') {\n        setNames([]);\n        setArr([]);\n        setdata('');\n      } else {\n        let myobjs = JSON.parse(action);\n        let all_names = []\n        let tarr = myobjs.ObjAction\n        myobjs.ObjAction.map((c,i)=>{\n          all_names.push(c.actresid);\n        })\n        setNames(all_names);\n        setArr(tarr);\n        setdata(JSON.stringify(tarr[idx], null, '\\t'));\n      }\n      // setdata(action)\n      fl = false;\n      if (isJson(action)) {\n        setDownloadable(true);\n      }\n    }\n    if (activeStep === 3) {\n      // setdata(custom);\n      fl = false\n      if (isJson(custom)) {\n        setDownloadable(true);\n      }\n    }\n    if (activeStep === 4) {\n      setdata(timeline);\n      fl = false;\n      if (isJson(timeline)) {\n        setDownloadable(true);\n      }\n    }\n    setLoading(false);\n  }, []);\n  \n  const downloadTxtFile = () => {\n    if (data === \"\" || !isJson(data)) {\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n      setDownloadable(false);\n      return;\n    }\n    let fileName = \"\";\n    if (activeStep === 0) fileName = \"scene\";\n    if (activeStep === 1) fileName = \"asset\";\n    if (activeStep === 2) fileName = \"action\";\n    if (activeStep === 3) fileName = \"custom\";\n    if (activeStep === 4) fileName = \"timeline\";\n    const json = data;\n    const blob = new Blob([json], { type: \"application/json\" });\n    const href = URL.createObjectURL(blob);\n\n    const downlink = document.createElement(\"a\");\n    downlink.href = href;\n    downlink.download = projectname + \"-\" + fileName + \".json\";\n    document.body.appendChild(downlink);\n    downlink.click();\n\n    // clean up \"a\" element & remove ObjectURL\n    document.body.removeChild(downlink);\n    URL.revokeObjectURL(href);\n  };\n\n  let handleInputChange = (e) => {\n    let inputValue = e.target.value;\n    setValue(inputValue);\n  };\n\n  let asset_valid = (asset, asset_list, flag) => {\n    // if flag is zero, dont print any errors\n    let valid_obj = false;\n\n    asset_list.map(((d,j)=>{\n      if(asset === d)\n        valid_obj = true;\n      // if(c.targetObj == d)\n      //   valid_target = true;\n    }))\n\n    if(valid_obj === false) {\n      setValidated(false);\n      setDownloadable(false);\n      if (flag) {\n        toast({\n          title:\n            \"Object \"+ asset +\" is not listed in Asset JSON. Only assets present in Asset JSON are valid.\"+asset+\"  \"+asset_list,\n          status: \"warning\",\n          duration: 5000,\n          isClosable: true,\n          position: \"top-right\",\n        });\n      }\n      return -1;\n    }\n    return 1;\n  }\n\n  let assetValidator = (a, all_object_ids) => {\n    a.map((c,i)=>{\n      let ret1 = asset_valid(c.sourceObj, all_object_ids, 1);\n      let ret2;\n      if (c.targetObj[c.targetObj.length - 1] === '*') {\n        ret2 = 1;\n      } else\n        ret2 = asset_valid(c.targetObj, all_object_ids, 1);\n\n      if(ret1 === -1) {\n        return false;\n      }\n\n      if (c.repeatactionfor !== null && c.repeatactionfor.length !== 0 && c.repeatactionfor[0] !== \" \") {\n        let repeat_assets = [];\n        let curr_word = \"\";\n        Array.from(c.repeatactionfor).map((char, key)=>{\n          if (char === ',' || char === ' ') {\n            if(curr_word !== \"\" && curr_word !== \" \" && curr_word.length !== 0) {\n              repeat_assets.push(curr_word);\n              curr_word = \"\";\n            }\n          } else\n            curr_word = curr_word + char;\n        })\n        if(curr_word !== \"\" || curr_word !== \" \" || curr_word.length !== 0)\n          repeat_assets.push(curr_word);\n        \n        repeat_assets.map((word, key)=>{\n          let ret = asset_valid(word, all_object_ids, 1);\n          if ( ret === -1) {\n            return false;\n          }\n        })\n\n        if (ret2 === -1 && c.targetObj[c.targetObj.length - 1] !== \"*\") {\n          toast({\n            title:\n              \"Please update the Target Object according to the reccomendations in the document.\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n          return false;\n        } else {\n          if(asset_valid(c.targetObj, repeat_assets, 0) === 1) {\n            toast({\n              title:\n                \"Target object should not be a part of repeatactionfor.\",\n              status: \"warning\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\",\n            });\n            return false;\n          }\n        }\n      }\n    })\n    return true;\n  }\n\n  let onValidate2 = async () => {\n    toast({\n      title: \"Validation successful\",\n      status: \"success\",\n      duration: 5000,\n      isClosable: true,\n      position: \"top-right\",\n    });\n\n    valid_rule.push({\n      rulename: rulename,\n      data_name: data,\n      description: description\n    });\n\n    setDownloadable(true);\n    setSavebutton(true);\n  };\n\n  const onValidate = async () => {\n    let tarr = arr;\n    tarr[idx] = JSON.parse(data);\n    setArr(tarr);\n    \n    let tnames = names;\n    if (activeStep === 1)\n      tnames[idx] = tarr[idx]._objectname;\n    else if (activeStep === 2)\n      tnames[idx] = tarr[idx].actresid;\n    setNames(tnames);\n\n    let tdata = data;\n    if (activeStep === 1)\n      tdata = JSON.stringify({articles: arr}, null, 4)\n    else if (activeStep === 2)\n      tdata = JSON.stringify({ObjAction: arr}, null, 4)\n\n    if (!isJson(tdata)) {\n      setValidated(false);\n      setDownloadable(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n      return;\n    }\n    setDisplayErrors([]);\n    errors = [];\n    var myjson = JSON.parse(tdata);\n    \n    try {\n      var mygrm = \"\";\n      if (activeStep === 0) mygrm = JSON.parse(grammarDataArray[0]);\n      else if (activeStep === 1) mygrm = JSON.parse(grammarDataArray[1]);\n      else if (activeStep === 2) mygrm = JSON.parse(grammarDataArray[2]);\n      else if (activeStep === 3) mygrm = JSON.parse(grammarDataArray[3]);\n      else if (activeStep === 4) mygrm = JSON.parse(grammarDataArray[4]);\n      // console.log(typeof errors);\n\n    } catch (e) {\n      console.log(e);\n    }\n\n    try {\n      if (activeStep === 2) {\n        try {\n          {\n            let all_object_ids = [];\n            const myobjs = JSON.parse(asset);\n\n            myobjs.articles.map((c,i)=>{\n              all_object_ids.push(c._sid);\n            })\n\n            var a = myjson.ObjAction;\n            for (let i = 0; i < a.length; i++) {\n              var c = a[i].actresid;\n              flag = true;\n              if (c) {\n                rules.push(c);\n              }\n            }\n          }\n        } catch (e) {\n          console.log(e);\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title:\n              \"There are errors in the specification. Please review the error message\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n          return;\n        }\n      } else if (activeStep === 1) {\n        try {\n          {\n            var a = myjson.articles;\n            for (let i = 0; i < a.length; i++) {\n              var c = a[i]._objectname;\n              flag = true;\n              if (c) {\n                rules.push(c);\n              }\n            }\n          }\n        } catch (e) {\n          console.log(e);\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title:\n              \"There are errors in the specification. Please review the error message\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n          return;\n        }\n      } \n    } catch {\n      console.log(e);\n    }\n    if (grammarDataArray.length === 0) {\n      await getFiles();\n    }\n\n\n    try {\n      let mygrm = \"\";\n      if (activeStep === 0) mygrm = JSON.parse(grammarDataArray[0]);\n      else if (activeStep === 1) mygrm = JSON.parse(grammarDataArray[1]);\n      else if (activeStep === 2) mygrm = JSON.parse(grammarDataArray[2]);\n      else if (activeStep === 3) mygrm = JSON.parse(grammarDataArray[3]);\n      else if (activeStep === 4) mygrm = JSON.parse(grammarDataArray[4]);\n\n\n      if (!jsonValidator(mygrm, myjson)) {\n        if(activeStep === 2)\n        {\n          let all_object_ids = [];\n          const myobjs = JSON.parse(asset);\n\n          myobjs.articles.map((c,i)=>{\n            all_object_ids.push(c._sid);\n          })\n\n          const ret_asset = assetValidator(myjson.ObjAction, all_object_ids);\n          if(!ret_asset)\n          {\n            console.log(errors);\n            toast({\n              title: \"There are errors in the specification. Please review the error message\",\n              status: \"warning\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\",\n            });\n            return;\n          }\n          else{\n            setValidated(true);\n            setDownloadable(true);\n            toast({\n              title: \"Validation Successful\",\n              status: \"success\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\",\n            });\n          }\n        }\n        else{\n          setValidated(true);\n          setDownloadable(true);\n          toast({\n            title: \"Validation Successful\",\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n        }\n      } else {\n        console.log(errors);\n        toast({\n          title: \"There are errors in the specification. Please review the error message\",\n          status: \"warning\",\n          duration: 5000,\n          isClosable: true,\n          position: \"top-right\",\n        });\n      }\n      setDisplayErrors(errors);\n    }\n    catch (e) {\n      console.log(e);\n      toast({\n        title: \"There are errors in the specification. Please review the error message\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n    }\n  };\n\n  const showValidateHandler = async () => {\n    let code = data;\n    let jsonData = JSON.stringify({\n      types: [\n        {\n          type: \"if\",\n          order: [[\"condition\"], [\"scope\"]],\n        },\n\n        {\n          type: \"else\",\n          prev: [\"if\", \"else-if\"],\n          order: [[\"scope\"]],\n        },\n\n        {\n          type: \"else-if\",\n          prev: [\"if\", \"else-if\"],\n          order: [[\"condition\"], [\"scope\"]],\n        },\n\n        {\n          type: \"switch\",\n          order: [[\"condition\"], [\"scope\", [\"Case\"], [\"Default\"]]],\n        },\n\n        {\n          type: \"switch-case\",\n          order: [[\"condition\"], [\"scope\"]],\n        },\n\n        {\n          type: \"switch-case-default\",\n          order: [[\"scope\"]],\n        },\n\n        {\n          type: \"for\",\n          order: [\n            [\"condition\", [\"conditionSeparator\", \"conditionSeparator\"]],\n            [\"scope\"],\n          ],\n        },\n\n        {\n          type: \"while\",\n          order: [[\"condition\"], [\"scope\"]],\n        },\n\n        {\n          type: \"do\",\n          order: [[\"scope\"]],\n          next: [\"do-while\"],\n        },\n\n        {\n          type: \"do-while\",\n          order: [[\"condition\"]],\n          prev: [\"do\"],\n        },\n      ],\n      constructs: [\n        {\n          name: \"if\",\n          type: \"if\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n        },\n\n        {\n          name: \"else-if\",\n          type: \"else-if\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          pre: [\"if\", \"else-if\"],\n        },\n\n        {\n          name: \"else\",\n          type: \"else\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          pre: [\"if\", \"else-if\"],\n        },\n\n        {\n          name: \"switch\",\n          type: \"switch\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          body: \"Case\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          \"end-body\": \"default\",\n        },\n\n        {\n          name: \"Case\",\n          type: \"switch-case\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          parent: \"switch\",\n        },\n\n        {\n          name: \"Default\",\n          type: \"switch-case-default\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          parent: \"switch\",\n        },\n\n        {\n          name: \"for\",\n          type: \"for\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          conditionSeparator: \"/\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n        },\n\n        {\n          name: \"while\",\n          type: \"while\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n        },\n\n        {\n          name: \"do\",\n          type: \"do\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          next: \"do-while\",\n        },\n\n        {\n          name: \"do-while\",\n          type: \"do-while\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n        },\n      ],\n      specialSymbols: [\"#\", \":\", \"!\", \"/\", \"(\", \")\"],\n    });\n\n    // fetch(`http://localhost:5001/api/upload`, {\n    fetch(validation_server + '/api/upload', {\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({jsonData}),\n    }).then((response) => {\n      response.json().then((val) => {\n        console.log(\"Uploaded\");\n        console.log(val);\n      })\n      .catch((err)=>{\n        console.log(err);\n      });\n    })\n    .catch((err)=>{\n      console.log(err);\n    });\n\n    // fetch(`http://localhost:5001/api/process`, {\n    fetch(validation_server + '/api/process', {\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({code}),\n    }).then((response) => {\n      response.json().then((val) => {\n        if (val.valid) {\n          onValidate2();\n        } else {\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title: \"Error! Please follow conditional syntax.\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n          return;\n        }\n      })\n      .catch((err)=>{\n        console.log(err);\n      });\n    })\n    .catch((err)=>{\n      console.log(err);\n    });\n  };\n\n  const handleValidateButton = () => {\n    showValidateHandler(true);\n    setValidated(true);\n  };\n\n  const saveButton = async () => {\n    try{\n      const res = await Axios.post(\n        // \"http://localhost:5002/api/custom/upload-custom-rule\", {\n        backend + \"/api/custom/upload-custom-rule\", {\n          headers: {\n            \"Content-Type\": \"application/json\", \n            token: jwttoken \n          },\n          data: {\n            project_id: projectid,\n            rulename: rulename,\n            data_name: btoa(data),\n            description: description\n          }\n        }\n      );\n      toast({\n        title: \"Behaviour Added\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n\n      setRuleList([...rule_list, {\n        project_id: projectid,\n        rulename: rulename,\n        data_name: btoa(data),\n        description: description\n      }]);\n\n      setdata('');\n      setRulename('');\n      setDescription('');\n      setValidated(false);\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  const flushWrite = () => {\n    console.log('flushed everything!');\n    setValidated(false);\n    setdata('');\n    setRulename('');\n    setDescription('');\n  }\n\n  const onNextStep = async () => {\n    let tdata = data;\n    if (activeStep === 1)\n      tdata = JSON.stringify({articles: arr}, null, 4)\n    else if (activeStep === 2)\n      tdata = JSON.stringify({ObjAction: arr}, null, 4)\n\n    if (!isJson(data) && activeStep !== 3) {\n      setValidated(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n    setSubmitting(true);\n    let url = backend;\n    if (activeStep === 0)\n      url = url + `/api/project/${projectid}/scene`;\n    else if (activeStep === 1)\n      url = url + `/api/project/${projectid}/asset`;\n    else if (activeStep === 2)\n      url = url + `/api/project/${projectid}/action`;\n    else if (activeStep === 3)\n      url = url + `/api/project/${projectid}/custom`;\n    else if (activeStep === 4)\n      url = url + `/api/project/${projectid}/timeline`;\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.patch(url, { data:tdata }, requestOptions);\n\n      toast({\n        title: res.data.message,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Something wents wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n    setSubmitting(false);\n    nextStep();\n  };\n\n  const handel_name = (e) => {\n    setRulename(e.target.value);\n  };\n\n  const handel_description = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const AddNewObj = () => {\n    setIdx(arr.length)\n    let tnames = names;\n    tnames.push('');\n    setNames(tnames);\n    let tarr = arr;\n    tarr.push('');\n    setArr(tarr);\n    setdata('');\n  };\n\n  const onFinish = async () => {\n    if (!isJson(data)) {\n      setValidated(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n    setSubmitting(true);\n    let url = backend;\n    if (activeStep === 0)\n      url = url + `/api/project/${projectid}/scene`;\n    else if (activeStep === 1)\n      url = url + `/api/project/${projectid}/asset`;\n    else if (activeStep === 2)\n      url = url + `/api/project/${projectid}/action`;\n    else if (activeStep === 3)\n      url = url + `/api/project/${projectid}/custom`;\n    else if (activeStep === 4)\n      url = url + `/api/project/${projectid}/timeline`;\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.patch(url, { data }, requestOptions);\n\n      toast({\n        title: res.data.message,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n    setSubmitting(false);\n    onOpen();\n  };\n\n  const saveCustom = () => {\n    let str = '';\n    board.map((p) => {\n      if (str.length > 0) {\n        str +=\n        `,{\"rulename\":\"${p.rulename\n        }\", \"description\":\"${p.description\n        }\",\"logic\": \"${btoa(\n          p.data_name\n        )}\"}\\n`\n      } else {\n        str +=\n        `{\"rulename\":\"${p.rulename\n        }\", \"description\":\"${p.description\n        }\",\"logic\": \"${btoa(\n          p.data_name\n        )}\"}\\n`\n      }\n    });\n\n    if (!fl) {\n      for (let i = 0; i < rules.length; i++) {\n        rules[i] = `\"` + rules[i] + `\"`;\n      }\n      fl = true;\n    }\n    setdata(\n      `{\"objects_used\":[${rules}],\"rules\":[${str}]}`\n    );\n    toast({\n      title:\n        \"JSON is saved, click Next to continue\",\n      status: \"success\",\n      duration: 5000,\n      isClosable: true,\n      position: \"top-right\",\n    });\n    setReorder(false);\n    setDownloadable(true);\n    setBoard([]);\n    console.log(`{\"objects_used\":[${rules}],\"rules\":[${str}]}`);\n  }\n\n  return loading ? (\n    <>\n      <Flex\n        width={\"80vw\"}\n        height={\"90vh\"}\n        justifyContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      </Flex>\n    </>\n  ) : (\n    <>\n      {activeStep !== 3 ? (\n        <Grid templateColumns=\"repeat(6, 1fr)\" gap={4}>\n          <GridItem rowSpan={3} colSpan={1}>\n            <Flex flexDir={\"column\"} pr={20} pt={120}>\n            </Flex>\n          </GridItem>\n          <GridItem rowSpan={3} colSpan={3}>\n            <Flex py={4} alignItems={\"center\"} flexDir=\"column\">\n              <Flex marginTop={20} marginBottom={10}>\n                <AceEditor\n                  fontSize={16}\n                  showPrintMargin={true}\n                  showGutter={true}\n                  highlightActiveLine={true}\n                  setOptions={{\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    enableSnippets: false,\n                    showLineNumbers: true,\n                    tabSize: 2,\n                  }}\n                  mode=\"json\"\n                  theme=\"terminal\"\n                  onChange={(newvalue, event) => {\n                    setdata(newvalue);\n                    setDownloadable(false);\n                  }}\n                  value={data}\n                  name=\"grammar-editor\"\n                  wrapEnabled\n                  height=\"40em\"\n                  width={\"40em\"}\n                />\n                <Stack marginLeft={10} py={4} direction=\"column\">\n                  {names.map((name, id) => (\n                    <>\n                      <Button\n                        colorScheme=\"blue\"\n                        onClick={ () => {setIdx(id);\n                          if (name === '')\n                            setdata('')\n                          else\n                            setdata(JSON.stringify(arr[id], null, '\\t'))} }\n                      >{name}</Button>\n                    </>\n                  ))}\n                </Stack>\n              </Flex>\n              <Stack py={4} direction=\"row\">\n                <Button\n                  colorScheme=\"yellow\"\n                  disabled={!data}\n                  onClick={onValidate}\n                >\n                  Validate\n                </Button>\n                <Button\n                  colorScheme=\"green\"\n                  disabled={!downloadable}\n                  onClick={downloadTxtFile}\n                  leftIcon={<BiDownload />}\n                >\n                  Download File\n                </Button>\n                {activeStep === 1 | activeStep === 2 ? (\n                  <Button\n                    colorScheme=\"yellow\"\n                    disabled={!data}\n                    onClick={AddNewObj}\n                  >\n                    New\n                  </Button>\n                ): (<></>)}\n              </Stack>\n\n              {activeStep === stepslen ? (\n                <Flex px={4} py={4} width=\"100%\" flexDirection=\"column\">\n                  <Heading fontSize=\"xl\" textAlign=\"center\">\n                    Woohoo! All steps completed!\n                  </Heading>\n                  <Button mx=\"auto\" mt={6} size=\"sm\" onClick={reset}>\n                    Reset\n                  </Button>\n                </Flex>\n              ) : (\n                <Flex width=\"100%\" justify=\"flex-end\">\n                  <Button\n                    isDisabled={activeStep === 0}\n                    mr={4}\n                    onClick={prevStep}\n                    size=\"sm\"\n                    variant={\"outline\"}\n                  >\n                    Prev\n                  </Button>\n                  {activeStep === stepslen - 1 ? (\n                    <Button\n                      size=\"sm\"\n                      onClick={onFinish}\n                      disabled={!validated}\n                      isLoading={submitting}\n                      colorScheme=\"green\"\n                      variant={\"outline\"}\n                    >\n                      Finish\n                    </Button>\n                  ) : (\n                    <Button\n                      size=\"sm\"\n                      onClick={onNextStep}\n                      disabled={!validated}\n                      isLoading={submitting}\n                      colorScheme=\"yellow\"\n                      variant={\"outline\"}\n                    >\n                      Next\n                    </Button>\n                  )}\n                </Flex>\n              )}\n            </Flex>\n          </GridItem>\n          {/* for errors */}\n          <GridItem rowSpan={3} colSpan={2} pt={120}>\n            <Flex flexDir={\"column\"} pl={20}>\n              {displayErrors.length > 0 ? (\n                <List spacing={2}>\n                  {displayErrors.map((e, i) => {\n                    let str = \"\";\n                    const splitarr = e.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g);\n                    let Val;\n                    if (splitarr.length === 12) {\n                      splitarr.map(\n                        (m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m)\n                      );\n                      Val = () => (\n                        <>\n                          <Text as=\"span\">\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={tipcolors[splitarr[10]]}\n                            >\n                              {splitarr[0]}\n                            </Text>\n                            <Text as=\"span\">{str}</Text>\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={tipcolors[splitarr[10]]}\n                            >\n                              {\" \" + splitarr[10]}\n                            </Text>\n                          </Text>\n                        </>\n                      );\n                    }\n                    if (splitarr.length === 7 || splitarr.length === 8) {\n                      splitarr.map((m, i) => i !== 0 && (str = str + \" \" + m));\n                      Val = () => (\n                        <>\n                          <Text as=\"span\">\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={\"teal.400\"}\n                            >\n                              {splitarr[0]}\n                            </Text>\n                            <Text as=\"span\">{str}</Text>\n                          </Text>\n                        </>\n                      );\n                    }\n                    if (splitarr.length === 11) {\n                      splitarr.map(\n                        (m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m)\n                      );\n                      Val = () => (\n                        <>\n                          <Text as=\"span\">\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={tipcolors[splitarr[10]]}\n                            >\n                              {splitarr[0]}\n                            </Text>\n                            <Text as=\"span\">{str}</Text>\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={tipcolors[splitarr[10]]}\n                            >\n                              {\" \" + splitarr[10]}\n                            </Text>\n                          </Text>\n                        </>\n                      );\n                    }\n                    return (\n                      <ListItem key={i}>\n                        <ListIcon as={FaExclamationCircle} color=\"red.500\" />\n                        {<Val />}\n                      </ListItem>\n                    );\n                  })}\n                </List>\n              ) : (\n                <></>\n              )}\n            </Flex>\n          </GridItem>\n          <Modal onClose={onClose} isOpen={isOpen} isCentered>\n            <ModalOverlay />\n            <ModalContent>\n              <ModalCloseButton />\n              <ModalBody>\n                <Box textAlign=\"center\" py={10} px={6}>\n                  <CheckCircleIcon boxSize={\"50px\"} color={\"green.500\"} />\n                  <Heading as=\"h2\" size=\"xl\" mt={6} mb={2}>\n                    Your specification are successful saved!\n                  </Heading>\n                  <Text color={\"gray.500\"}>\n                    We have made sure that your data is free from any data-types\n                    or syntax errors. Happy Development!\n                  </Text>\n                </Box>\n              </ModalBody>\n              <ModalFooter>\n                <Button>\n                  <Flex as={Link} to=\"/projects\">Close</Flex>\n                </Button>\n              </ModalFooter>\n            </ModalContent>\n          </Modal>\n        </Grid>\n      ) : (\n        <>\n          <Tabs isFitted variant=\"unstyled\" marginTop={10}>\n            <TabList mb=\"1em\">\n              <Tab _selected={{ color: 'white', bg: 'blue.300' }}>Author Custom Behaviour</Tab>\n              <Tab _selected={{ color: 'white', bg: 'blue.300' }}>View Authored Custom Behaviours</Tab>\n              <Tab _selected={{ color: 'white', bg: 'blue.300' }}>Publish</Tab>\n            </TabList>\n            <TabPanels>\n              <TabPanel>\n                <div>\n                  <Grid templateColumns=\"repeat(8, 1fr)\" gap={2}>\n                    <GridItem rowSpan={8} colStart={1} colEnd={8}>\n                      <Flex py={4} alignItems={\"center\"} flexDir=\"column\">\n                        <Text fontSize='xl'>Author your custom behaviours below.</Text>\n                        <Flex flexDir=\"row\" marginTop={10}>\n                          <Text fontSize='lg'>Behaviour Name:</Text>\n                          <Flex>\n                            <FormControl\n                              paddingRight={10}\n                              paddingLeft={2}\n                            >\n                              <Input\n                                value={rulename}\n                                onChange={handel_name}\n                                placeholder=\"Name\"\n                                size=\"sm\"\n                              ></Input>\n                            </FormControl>\n                          </Flex>\n                          <Text fontSize='lg'>Behaviour Description:</Text>\n                          <Flex>\n                            <FormControl\n                              paddingLeft={2}\n                            >\n                              <Input\n                                value={description}\n                                onChange={handel_description}\n                                placeholder=\"Description\"\n                                size=\"sm\"\n                              ></Input>\n                            </FormControl>\n                          </Flex>\n                        </Flex>\n                        <Flex flexDir=\"row\" paddingTop={10} paddingLeft={35} marginLeft={20}>\n                          <Box\n                            as=\"pane\"\n                            bg=\"grey\"\n                            _dark={{\n                              bg: \"gray.800\",\n                            }}\n                            h=\"32em\"\n                            w=\"12em\"\n                          >\n                            <Box \n                              as=\"pane\"\n                              zIndex=\"fixed\"\n                              h=\"300px\"\n                              overflowX=\"hidden\"\n                              overflowY=\"auto\"\n                              w=\"400px\"\n                              colorScheme=\"yellow\"\n                            >\n                              <Flex px=\"4\" pb=\"3\" pt=\"5\" align=\"center\">\n                                  <Text\n                                    fontSize=\"2xl\"\n                                    ml=\"2\"\n                                    color=\"white\"\n                                    fontWeight=\"semibold\"\n                                  >\n                                    Code Constructs\n                                  </Text>\n                              </Flex>\n                              <Flex\n                                direction=\"column\"\n                                as=\"nav\"\n                                fontSize=\"lg\"\n                                color=\"white\"\n                                aria-label=\"Main Navigation\"\n                                margin={5}\n                                marginTop={2}\n                                marginLeft={7}\n                              >\n                                { semantics.elements.map((p) => (\n                                    <a\n                                      onClick={() => {\n                                        console.log(position);\n                                        var newdata_part1 = data.slice(0,position);\n                                        var newdata_part2 = data.slice(position);\n                                        setdata(newdata_part1 + p.editorDisplay + newdata_part2);\n                                      }}\n                                      color=\"white\"\n                                    >\n                                      <span>{p.displayName}</span>\n                                    </a>\n                                  ))\n                                }\n                              </Flex>\n                            </Box>\n                          </Box>\n                          <Flex marginLeft={10} marginRight={10} marginBottom={10}>\n                            <AceEditor\n                              fontSize={16}\n                              showPrintMargin={true}\n                              showGutter={true}\n                              highlightActiveLine={true}\n                              setOptions={{\n                                enableBasicAutocompletion: true,\n                                enableLiveAutocompletion: true,\n                                enableSnippets: false,\n                                showLineNumbers: true,\n                                tabSize: 2,\n                              }}\n                              mode=\"json\"\n                              theme=\"terminal\"\n                              onChange={(newvalue, event) => {\n                                fl = false;\n                                setdata(newvalue);\n                                setDownloadable(false);\n                              }}\n                              onCursorChange={(newplace)=>{\n                                convertPointer({\"row\":newplace.cursor.row, \"column\": newplace.cursor.column}, newplace.cursor.document.$lines);\n                              }}\n                              onSelectionChange={(e)=>{\n                                convertPointer({\"row\": e.cursor.row, \"column\": e.cursor.column}, e.doc.$lines);\n                              }}\n                              value={data}\n                              name=\"grammar-editor\"\n                              wrapEnabled\n                              height={\"40em\"}\n                              width={\"40em\"}\n                              id=\"editor\"\n                            />\n                          </Flex>\n                          <Box\n                            as=\"pane\"\n                            bg=\"grey\"\n                            _dark={{\n                              bg: \"gray.800\",\n                            }}\n                            h=\"32em\"\n                            w=\"18em\"\n                          >\n                            <Box // navbar\n                              as=\"pane\"\n                              zIndex=\"fixed\"\n                              h=\"300px\"\n                              pb=\"10\"\n                              overflowX=\"hidden\"\n                              overflowY=\"auto\"\n                              bg=\"grey\"\n                              w=\"400px\"\n                            >\n                              <Flex px=\"4\" pb=\"3\" pt=\"5\" align=\"center\">\n                                  <Text\n                                    fontSize=\"2xl\"\n                                    ml=\"2\"\n                                    color=\"white\"\n                                    fontWeight=\"semibold\"\n                                  >\n                                    Action-Responses\n                                  </Text>\n                              </Flex>\n                              <Flex\n                                direction=\"column\"\n                                as=\"nav\"\n                                fontSize=\"lg\"\n                                color=\"white\"\n                                aria-label=\"Main Navigation\"\n                                margin={5}\n                                marginTop={2}\n                                marginLeft={7}\n                              >\n                                {flag ? (\n                                  rules.map((p) => (\n                                    <a\n                                      onClick={() => {\n                                        var newdata_part1 = data.slice(0,position);\n                                        var newdata_part2 = data.slice(position);\n                                        setdata(newdata_part1 + p + newdata_part2);\n                                      }}\n                                      color=\"white\"\n                                    >\n                                      {p}\n                                    </a>\n                                  ))\n                                ) : (\n                                  <>\n                                    <Text>No recent files...</Text>\n                                  </>\n                                )}\n                              </Flex>\n                            </Box>\n                          </Box>\n                        </Flex>\n                        <Stack py={4} direction=\"row\">\n                          <Button\n                            colorScheme=\"yellow\"\n                            disabled={!(data && rulename && description)}\n                            onClick={() => {\n                              handleValidateButton();\n                              setSeed(Math.random());\n                            }}\n                          >\n                            Validate\n                          </Button>\n                          <Button\n                            colorScheme=\"green\"\n                            disabled={!validated}\n                            onClick={() => {\n                              saveButton();\n                            }}\n                          >\n                            Save\n                          </Button>\n                          <Button\n                            colorScheme=\"red\"\n                            disabled={!(data || rulename || description)}\n                            onClick={() => {\n                              flushWrite();\n                            }}\n                          >\n                            Flush\n                          </Button>\n                        </Stack>\n                        {activeStep === stepslen ? (\n                          <Flex\n                            px={4}\n                            py={4}\n                            width=\"100%\"\n                            flexDirection=\"column\"\n                          >\n                            <Heading fontSize=\"xl\" textAlign=\"center\">\n                              Woohoo! All steps completed!\n                            </Heading>\n                            <Button mx=\"auto\" mt={6} size=\"sm\" onClick={reset}>\n                              Reset\n                            </Button>\n                          </Flex>\n                        ) : (\n                          <Flex width=\"100%\" justify=\"flex-end\">\n                            <Button\n                              isDisabled={activeStep === 0}\n                              mr={4}\n                              onClick={prevStep}\n                              size=\"sm\"\n                              variant={\"outline\"}\n                            >\n                              Prev\n                            </Button>\n                          </Flex>\n                        )}\n                      </Flex>\n                    </GridItem>\n                    {/* for errors */}\n                    <GridItem rowSpan={3} colSpan={2} pt={120}>\n                      <Flex flexDir={\"column\"} pl={20}>\n                        {displayErrors.length > 0 ? (\n                          <List spacing={2}>\n                            {displayErrors.map((e, i) => {\n                              let str = \"\";\n                              const splitarr = e.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g);\n                              let Val;\n                              if (splitarr.length === 12) {\n                                splitarr.map(\n                                  (m, i) =>\n                                    i !== 0 && i !== 10 && (str = str + \" \" + m)\n                                );\n                                Val = () => (\n                                  <>\n                                    <Text as=\"span\">\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={tipcolors[splitarr[10]]}\n                                      >\n                                        {splitarr[0]}\n                                      </Text>\n                                      <Text as=\"span\">{str}</Text>\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={tipcolors[splitarr[10]]}\n                                      >\n                                        {\" \" + splitarr[10]}\n                                      </Text>\n                                    </Text>\n                                  </>\n                                );\n                              }\n\n                              if (\n                                splitarr.length === 7 ||\n                                splitarr.length === 8\n                              ) {\n                                splitarr.map(\n                                  (m, i) => i !== 0 && (str = str + \" \" + m)\n                                );\n                                Val = () => (\n                                  <>\n                                    <Text as=\"span\">\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={\"teal.400\"}\n                                      >\n                                        {splitarr[0]}\n                                      </Text>\n                                      <Text as=\"span\">{str}</Text>\n                                    </Text>\n                                  </>\n                                );\n                              }\n\n                              if (splitarr.length === 11) {\n                                splitarr.map(\n                                  (m, i) =>\n                                    i !== 0 && i !== 10 && (str = str + \" \" + m)\n                                );\n                                Val = () => (\n                                  <>\n                                    <Text as=\"span\">\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={tipcolors[splitarr[10]]}\n                                      >\n                                        {splitarr[0]}\n                                      </Text>\n                                      <Text as=\"span\">{str}</Text>\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={tipcolors[splitarr[10]]}\n                                      >\n                                        {\" \" + splitarr[10]}\n                                      </Text>\n                                    </Text>\n                                  </>\n                                );\n                              }\n\n                              return (\n                                <ListItem key={i}>\n                                  <ListIcon\n                                    as={FaExclamationCircle}\n                                    color=\"red.500\"\n                                  />\n                                  {<Val />}\n                                </ListItem>\n                              );\n                            })}\n                          </List>\n                        ) : (\n                          <></>\n                        )}\n                      </Flex>\n                    </GridItem>\n                  </Grid>\n                </div>\n              </TabPanel>\n              <TabPanel> \n                <div>\n                  <Grid templateColumns=\"repeat(6, 1fr)\" gap={2}>\n                    <GridItem rowSpan={8} colStart={1} colEnd={8}>\n                      <Flex py={4} alignItems={\"center\"} flexDir=\"column\">\n                        <Text fontSize='xl'>Choose a custom behaviour to view the behaviour logic.</Text>\n                        <Flex flexDir=\"row\" paddingTop={10} paddingLeft={35} marginLeft={20}>\n                          <Stack direction=\"column\" marginRight={10}>\n                            <Flex>\n                              <Text fontSize='lg'>Behaviour Name: {rule.rulename}</Text>\n                            </Flex>\n                            <Flex paddingTop={2}>\n                              <Text fontSize='lg'>Behaviour Description: {rule.description}</Text>\n                            </Flex>\n                            <Flex paddingTop={2}>\n                              <Text fontSize='lg'>Behaviour Logic:</Text>\n                            </Flex>\n                            <Flex paddingLeft={12}>\n                              <AceEditor\n                                fontSize={20}\n                                showPrintMargin={true}\n                                showGutter={true}\n                                highlightActiveLine={true}\n                                setOptions={{\n                                  enableBasicAutocompletion: true,\n                                  enableLiveAutocompletion: true,\n                                  enableSnippets: false,\n                                  showLineNumbers: true,\n                                  tabSize: 2,\n                                }}\n                                mode=\"json\"\n                                theme=\"terminal\"\n                                value={(rule.data_name != null ? atob(rule.data_name) : rule.data_name)}\n                                // value={logic}\n                                name=\"grammar-editor\"\n                                wrapEnabled\n                                height={\"28em\"}\n                                width={\"32em\"}\n                                readOnly={true}\n                              />\n                            </Flex>\n                          </Stack>\n                          <Box\n                            as=\"pane\"\n                            bg=\"grey\"\n                            _dark={{\n                              bg: \"gray.800\",\n                            }}\n                            h=\"36em\"\n                            w=\"18em\"\n                          >\n                            <Box // navbar\n                              as=\"pane\"\n                              zIndex=\"fixed\"\n                              h=\"300px\"\n                              pb=\"10\"\n                              overflowX=\"hidden\"\n                              overflowY=\"auto\"\n                              bg=\"grey\"\n                              w=\"400px\"\n                            >\n                              <Flex px=\"4\" pb=\"3\" pt=\"5\" align=\"center\">\n                                <Text\n                                  fontSize=\"2xl\"\n                                  ml=\"2\"\n                                  color=\"white\"\n                                  fontWeight=\"semibold\"\n                                >\n                                  Custom Behaviours\n                                </Text>\n                              </Flex>\n                              <Flex\n                                direction=\"column\"\n                                as=\"nav\"\n                                fontSize=\"md\"\n                                color=\"white\"\n                                aria-label=\"Main Navigation\"\n                                margin={5}\n                              >\n                                {rule_list.length > 0 ? (\n                                  rule_list.map((p) => (\n                                    <Text fontSize='xl'>\n                                      <a\n                                        onClick={() => {\n                                          setRule(p);\n                                          setLogic(p.data_name);\n                                        }}\n                                        color=\"white\"\n                                      >\n                                        {p.rulename}\n                                      </a>\n                                    </Text>\n                                  ))\n                                ) : (\n                                  <>\n                                    <Text>No recent files!</Text>\n                                  </>\n                                )}\n                              </Flex>\n                            </Box>\n                          </Box>\n                        </Flex>\n                        <Flex marginTop={10}>\n                          <Button\n                            colorScheme=\"red\"\n                            disabled={!rule.rulename}\n                            onClick={() => {\n                              setRule({});\n                              setLogic(\"\");\n                            }}\n                          >\n                            Flush\n                          </Button>\n                        </Flex>\n                      </Flex>\n                    </GridItem>\n                  </Grid>\n                </div>\n              </TabPanel>\n              <TabPanel>\n                <div>\n                  <Grid templateColumns=\"repeat(6, 1fr)\" gap={2}>\n                    <GridItem rowSpan={8} colStart={1} colEnd={8}>\n                      <Flex py={4} alignItems={\"center\"} flexDir={\"column\"}>\n                        <Text fontSize='xl'>Select and Publish final custom behaviours.</Text>\n                        <Text>Drag and drop custom behaviours from the behaviour section. Organise them\n                          in an order. On saving, the underlying specification will be published.\n                        </Text>\n                        <Flex flexDir=\"row\" paddingTop={10} paddingLeft={35} marginLeft={20}>\n                          {/* 1. space to hold items: pending */}\n                          <Flex paddingTop={10} marginRight={20}>\n                            {/* <DropArea /> */}\n                            {board.length > 0 ? (\n                              <Box\n                                ref={drop}\n                                width={600}\n                                height={700}\n                                border='1px solid'\n                                position='relative'\n                                maxHeight={700}\n                                overflowY='auto'\n                                justifyContent='center'\n                              >\n                                <Stack\n                                  py={4}\n                                  direction=\"column\"\n                                  paddingLeft={5}\n                                  paddingRight={5}\n                                >\n                                  {board.map((p, index) => (\n                                    <Button\n                                      backgroundColor='blue.200'\n                                      height={10}\n                                      width='auto'\n                                      draggable\n                                      onDragStart={(e) => {\n                                        if (reorder) {\n                                      \t  e.dataTransfer.setData('text/plain', index);\n                                        }\n                                      }}\n                                      onDragOver={(e) => {\n                                      \te.preventDefault();\n                                      }}\n                                      onDrop={(e) => {\n                                        if (reorder) {\n                                          const dragIndex = parseInt(e.dataTransfer.getData('text/plain'), 10);\n                                          console.log(dragIndex);\n                                          const hoverIndex = index;\n                                          if (dragIndex != hoverIndex) {\n                                            handleReorder(dragIndex, hoverIndex);\n                                          }\n                                        }\n                                      }}\n                                    >\n                                      <Text fontSize='xl'>{p.rulename}</Text>\n                                    </Button>\n                                  ))}\n                                </Stack>\n                              </Box>\n                            ) : (\n                              <Box\n                                ref={drop}\n                                width={600}\n                                height={700}\n                                border='1px solid'\n                                position='relative'\n                                justifyContent='center'\n                                alignItems='center'\n                              >\n                                <Text\n                                  textAlign=\"center\"\n                                >Drop Here</Text>\n                              </Box>\n                            )}\n                          </Flex>\n                          {/* 2. behaviours to select: done */}\n                          <Stack\n                            py={4}\n                            direction=\"column\"\n                            maxHeight={800}\n                            overflowY='auto'\n                          >\n                            <Flex align=\"center\">\n                              <Text fontSize=\"2xl\">Custom Behaviours</Text>\n                            </Flex>\n                            {rule_list.length > 0 ? (\n                              rule_list.map((p) => {\n                                return <Behaviour obj={p} reorder={reorder}/>\n                              })\n                            ) : (\n                              <>\n                                <Text fontSize='xl'>No recent files!</Text>\n                              </>\n                            )}\n                          </Stack>\n                        </Flex>\n                        <Stack py={4} direction=\"row\" marginTop={10}>\n                          <Button\n                            colorScheme=\"yellow\"\n                            onClick={() => {setReorder(true)}}\n                            disabled={board.length === 0}\n                            isLoading={submitting}\n                          >\n                            Reorder\n                          </Button>\n                          <Button\n                            onClick={saveCustom}\n                            disabled={!reorder}\n                            isLoading={submitting}\n                            colorScheme=\"green\"\n                          >\n                            Save\n                          </Button>\n                          <Button\n                            onClick={() => {setBoard([]); setReorder(false)}}\n                            disabled={board.length === 0}\n                            isLoading={submitting}\n                            colorScheme=\"red\"\n                          >\n                            Flush\n                          </Button>\n                          <Button\n                            colorScheme=\"green\"\n                            disabled={!downloadable}\n                            onClick={downloadTxtFile}\n                            leftIcon={<BiDownload />}\n                          >\n                            Download File\n                          </Button>\n                        </Stack>\n                        <Flex width=\"70%\" justify=\"flex-end\">\n                          <Button\n                            size=\"sm\"\n                            onClick={onNextStep}\n                            disabled={board.length}\n                            isLoading={submitting}\n                            colorScheme=\"yellow\"\n                            variant={\"outline\"}\n                          >\n                            Next\n                          </Button>\n                        </Flex>\n                      </Flex>\n                    </GridItem>\n                  </Grid>\n                </div>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </>\n      )}\n    </>\n  );\n};\n\nconst CustomCard = React.forwardRef(({ children, ...rest }, ref) => (\n  <Box p=\"1\">\n    <Tag ref={ref} {...rest}>\n      {children}\n    </Tag>\n  </Box>\n));\n\nexport default ProjectPageContent;\n","import { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Flex,\n  Spinner,\n  useToast,\n} from \"@chakra-ui/react\";\nimport Axios from \"axios\";\nimport { Step, Steps, useSteps } from \"chakra-ui-steps\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\n\nimport ProjectPageContent from \"./ProjectPageContent\";\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nconst steps = [\n  { label: \"Step 1\", description: \"Scene(s)\" },\n  { label: \"Step 2\", description: \"Article(s)\" },\n  { label: \"Step 3\", description: \"Action-Response(s)\" },\n  { label: \"Step 4\", description: \"Behaviour(s)\" },\n  { label: \"Step 5\", description: \"Timeline\" },\n];\n\nconst ProjectPage = () => {\n  const { nextStep, prevStep, setStep, reset, activeStep } = useSteps({\n    initialStep: 0,\n  });\n\n  const [currProject, setcurrProject] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { projectid } = useParams();\n\n  const jwttoken = localStorage.getItem(\"jwtToken\");\n  const getProject = async () => {\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.get(\n        // `http://localhost:5002/api/project/${projectid}`,\n        backend + `/api/project/${projectid}`,\n        requestOptions\n      );\n\n      setcurrProject(res.data);\n      // setStep(res.data.step);\n      // console.log(res.data.stModel Template\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  };\n\n  const handleStep = (step) => {\n    if (step <= activeStep) {\n      const f = async () => {\n        try {\n          setLoading(true);\n          await getProject();\n          setLoading(false);\n        } catch (err) {\n          console.log(err);\n        }\n      };\n      f();\n      setStep(step);\n    }\n  }\n\n  useEffect(() => {\n    const f = async () => {\n      try {\n        setLoading(true);\n        await getProject();\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    f();\n  }, []);\n\n  {\n    return loading === true || currProject === null ? (\n      <>\n        <Flex\n          width={\"80vw\"}\n          height={\"85vh\"}\n          justifyContent=\"center\"\n          alignItems={\"center\"}\n        >\n          <Spinner\n            thickness=\"4px\"\n            speed=\"0.65s\"\n            emptyColor=\"gray.200\"\n            color=\"blue.500\"\n            size=\"xl\"\n          />\n        </Flex>\n      </>\n    ) : (\n      <Flex flexDir=\"column\" minH={\"85vh\"}>\n        <Breadcrumb\n          spacing=\"8px\"\n          pt={5}\n          pl={5}\n          separator={<ChevronRightIcon color=\"gray.500\" />}\n        >\n          <BreadcrumbItem>\n            <BreadcrumbLink as={Link} to=\"/projects\">\n              Projects\n            </BreadcrumbLink>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem isCurrentPage>\n            <BreadcrumbLink>{currProject.name}</BreadcrumbLink>\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <Flex flexDir={\"column\"} m=\"30px\">\n          <Steps\n            colorScheme=\"yellow\"\n            activeStep={activeStep}\n            onClickStep={handleStep}\n          >\n            {steps.map(({ label, description }) => (\n              <Step\n                labelOrientation=\"vertical\"\n                label={label}\n                key={label}\n                description={description}\n              >\n                <DndProvider backend={HTML5Backend}>\n                  <ProjectPageContent\n                    projectname={currProject.name}\n                    nextStep={nextStep}\n                    prevStep={prevStep}\n                    reset={reset}\n                    activeStep={activeStep}\n                    stepslen={steps.length}\n                    scene={currProject.scene}\n                    action={currProject.action}\n                    asset={currProject.asset}\n                    custom={currProject.custom}\n                    timeline={currProject.timeline}\n                  />\n                </DndProvider>\n              </Step>\n            ))}\n          </Steps>\n        </Flex>\n      </Flex>\n    );\n  }\n};\n\nexport default ProjectPage;\n","import { Flex, Icon } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavItem = (props) => {\n  const { icon, children, url, ...rest } = props;\n  return (\n    <Flex\n      as={Link}\n      to={url}\n      align='center'\n      px='4'\n      mx='2'\n      rounded='md'\n      py='3'\n      cursor='pointer'\n      color='whiteAlpha.700'\n      _hover={{\n        bg: \"whiteAlpha.900\",\n        color: \"blackAlpha.900\",\n      }}\n      role='group'\n      fontWeight='semibold'\n      transition='.15s ease'\n      {...rest}\n    >\n      {icon && (\n        <Icon\n          mr='2'\n          boxSize='4'\n          _groupHover={{\n            color: \"blackAlpha.3600\",\n          }}\n          as={icon}\n        />\n      )}\n      {children}\n    </Flex>\n  );\n};\n\nexport default NavItem;\n","import React from \"react\";\nimport { Box, Text, Flex } from \"@chakra-ui/react\";\nimport NavItem from \"./NavItem\";\nimport { BsFiles } from \"react-icons/bs\";\nimport { FaProjectDiagram, FaRegUser, FaSignInAlt } from \"react-icons/fa\";\nimport { MdHelp, MdHome } from \"react-icons/md\";\nimport { VscFiles } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\n\nconst SidebarContent = (props) => (\n  <Box\n    as=\"nav\"\n    pos=\"fixed\"\n    top=\"0\"\n    left=\"0\"\n    zIndex=\"sticky\"\n    h=\"full\"\n    pb=\"10\"\n    overflowX=\"hidden\"\n    overflowY=\"auto\"\n    bg=\"#1C1C1C\"\n    borderColor=\"black\"\n    borderRightWidth=\"1px\"\n    w=\"60\"\n    {...props}\n  >\n    <Flex px=\"4\" py=\"5\" align=\"center\">\n      <Text fontSize=\"2xl\" ml=\"2\" color=\"white\" fontWeight=\"semibold\">\n        VReqST\n      </Text>\n    </Flex>\n    <Flex\n      direction=\"column\"\n      as=\"nav\"\n      fontSize=\"md\"\n      color=\"white\"\n      aria-label=\"Main Navigation\"\n    >\n      {props.auth.isAuthenticated ? (\n        <>\n          <NavItem icon={MdHome} to=\"/dashboard\" color=\"white\">\n            Home\n          </NavItem>\n          <NavItem icon={FaProjectDiagram} to=\"/projects\" color=\"white\">\n            Projects\n          </NavItem>\n          <NavItem icon={BsFiles} to=\"/myfiles\" color=\"white\">\n            My Validators\n          </NavItem>\n          <NavItem icon={VscFiles} to=\"/allfiles\" color=\"white\">\n            All Validators\n          </NavItem>\n        </>\n      ) : (\n        <>\n          <NavItem icon={FaSignInAlt} to=\"/login\" color=\"white\">\n            Login\n          </NavItem>\n          <NavItem icon={FaRegUser} to=\"/register\" color=\"white\">\n            Register\n          </NavItem>\n        </>\n      )}\n      <NavItem icon={MdHelp} to=\"/help\" color=\"white\">\n        Documentation\n      </NavItem>\n    </Flex>\n  </Box>\n);\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logoutUser })(SidebarContent);\n","import React from \"react\";\nimport { chakra, useColorModeValue, VisuallyHidden } from \"@chakra-ui/react\";\n\nconst SocialButton = ({ children, label, href }) => {\n  return (\n    <chakra.button\n      bg={useColorModeValue(\"blackAlpha.100\", \"whiteAlpha.100\")}\n      rounded={\"full\"}\n      w={8}\n      h={8}\n      cursor={\"pointer\"}\n      as={\"a\"}\n      href={href}\n      display={\"inline-flex\"}\n      alignItems={\"center\"}\n      justifyContent={\"center\"}\n      transition={\"background 0.3s ease\"}\n      _hover={{\n        bg: useColorModeValue(\"blackAlpha.200\", \"whiteAlpha.200\"),\n      }}\n      target=\"_blank\"\n    >\n      <VisuallyHidden>{label}</VisuallyHidden>\n      {children}\n    </chakra.button>\n  );\n};\n\nexport default SocialButton;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Avatar,\n  Box,\n  Center,\n  Container,\n  Drawer,\n  DrawerContent,\n  DrawerOverlay,\n  Flex,\n  IconButton,\n  Image,\n  InputGroup,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Stack,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { FaInstagram, FaLinkedin, FaTwitter, FaYoutube } from \"react-icons/fa\";\nimport { FaSignOutAlt, FaUser } from \"react-icons/fa\";\nimport { FiMenu } from \"react-icons/fi\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport SidebarContent from \"./SidebarContent\";\nimport { logoutUser } from \"../../redux/actions/authActions\";\nimport SocialButton from \"./SocialButton\";\n\nconst Sidebar = ({ children, auth, logoutUser }) => {\n  const [year, setYear] = useState('')\n  const sidebar = useDisclosure();\n\n  useEffect(() => {\n    const currentYear = new Date().getFullYear()\n    setYear(currentYear)\n  }, []);\n\n  return (\n    <Box\n      as=\"section\"\n      bg=\"whitesmoke\"\n      _dark={{\n        bg: \"gray.800\",\n      }}\n      minH=\"100vh\"\n    >\n      <SidebarContent\n        display={{\n          base: \"none\",\n          md: \"unset\",\n        }}\n      />\n      <Drawer\n        isOpen={sidebar.isOpen}\n        onClose={sidebar.onClose}\n        placement=\"left\"\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <SidebarContent w=\"full\" borderRight=\"none\" />\n        </DrawerContent>\n      </Drawer>\n      <Box\n        ml={{\n          base: 0,\n          md: 60,\n        }}\n        transition=\".3s ease\"\n      >\n        <Flex\n          as=\"header\"\n          align=\"center\"\n          justify=\"space-between\"\n          w=\"full\"\n          px=\"4\"\n          bg=\"white\"\n          _dark={{\n            bg: \"gray.800\",\n          }}\n          borderBottomWidth=\"1px\"\n          borderColor=\"whitesmoke\"\n          h=\"14\"\n        >\n          <IconButton\n            aria-label=\"Menu\"\n            display={{\n              base: \"inline-flex\",\n              md: \"none\",\n            }}\n            onClick={sidebar.onOpen}\n            icon={<FiMenu />}\n            size=\"sm\"\n          />\n          <InputGroup\n            w=\"96\"\n            display={{\n              base: \"none\",\n              md: \"flex\",\n            }}\n          ></InputGroup>\n          {auth.isAuthenticated && (\n            <Flex align=\"center\">\n              <Menu>\n                <MenuButton>\n                  <Avatar\n                    ml=\"4\"\n                    size=\"sm\"\n                    name={auth.user.name}\n                    cursor=\"pointer\"\n                  />\n                </MenuButton>\n                <MenuList>\n                  <Link to=\"/profile\">\n                    <MenuItem icon={<FaUser />}>Profile</MenuItem>\n                  </Link>\n                  <MenuItem icon={<FaSignOutAlt />} onClick={logoutUser}>\n                    Logout\n                  </MenuItem>\n                </MenuList>\n              </Menu>\n            </Flex>\n          )}\n        </Flex>\n\n        <Box as=\"main\">{children}</Box>\n      </Box>\n      <Box\n        bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n        color={useColorModeValue(\"gray.700\", \"gray.200\")}\n      >\n        {/* <Container\n          as={Stack}\n          maxW={\"6xl\"}\n          py={4}\n          spacing={4}\n          justify={\"center\"}\n          align={\"center\"}\n        >\n          <Image\n            src='/assets/iiithlogo.png'\n            bgColor={\"gray.300\"}\n            maxW='20%'\n            borderRadius={\"10px\"}\n          />\n        </Container> */}\n\n        <Box\n          bgColor={\"grey.300\"}\n          borderTopWidth={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"whitesmoke\", \"gray.700\")}\n        >\n          <Container\n            as={Stack}\n            maxW={\"6xl\"}\n            py={4}\n            direction={{ base: \"column\", md: \"row\" }}\n            spacing={4}\n            justify={{ base: \"center\", md: \"space-between\" }}\n            align={{ base: \"center\", md: \"center\" }}\n          >\n            <center>\n              <Flex pl={{ base: \"90px\", md: \"180px\" }}>\n                ©{year} Software Engineering Research Center, IIIT Hyderabad. All rights reserved\n              </Flex>\n            </center>\n            <Stack direction={\"row\"} spacing={6} justify=\"flex-end\">\n              <SocialButton\n                label={\"Twitter\"}\n                href={\"https://twitter.com/serc_iiith\"}\n              >\n                <FaTwitter />\n              </SocialButton>\n              <SocialButton\n                label={\"YouTube\"}\n                href={\n                  \"https://www.youtube.com/watch?v=051kkAC6eqs\"\n                }\n              >\n                <FaYoutube />\n              </SocialButton>\n              <SocialButton\n                label={\"Linkedin\"}\n                href={\"https://www.linkedin.com/company/serciiith\"}\n              >\n                <FaLinkedin />\n              </SocialButton>\n            </Stack>\n          </Container>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logoutUser })(Sidebar);\n","import React from \"react\";\n\nimport \"./HelpItem.css\";\n\nconst HelpItem = ({ number, title, subtitle }) => {\n  return (\n    <li className='process__item'>\n      <span className='process__number'>{number}</span>\n      <span className='process__title'>{title}</span>\n      <span className='process__subtitle'>{subtitle}</span>\n    </li>\n  );\n};\n\nexport default HelpItem;\n","import { Stack, Grid } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport HelpItem from \"./HelpItem\";\n\nconst HelpPage = () => {\n  return (\n    <Grid\n      bgColor={\"gray.200\"}\n      minH=\"85vh\"\n      templateColumns=\"repeat(2, 1fr)\"\n      gap={4}\n    >\n      <HelpItem\n        number={1}\n        title=\"Login\"\n        subtitle=\"Enter your email and super secret password to authenticate yourself.\"\n      />\n      <HelpItem\n        number={2}\n        title=\"Add Model Template File\"\n        subtitle=\"In My Files tab in the left sidebar, press the button Add Files, you will be redirected to the page where you can input the template and make sure you give your file a unique name.\"\n      />\n      <HelpItem\n        number={3}\n        title=\"Create a project\"\n        subtitle=\"Create a project, you can validate three types of model template files in each project. Scene File, Asset File, as well as Action File.\"\n      />\n      <HelpItem\n        number={4}\n        title=\"Choose a Project\"\n        subtitle=\"Click on any project, you will be redirect to the project page where you need to follow three steps (Not necessarily in sequence). You need to select the template file from the options given.\"\n      />\n      <HelpItem\n        number={5}\n        title=\"Validate Model Template\"\n        subtitle=\"Upon selecting a template file, its keys as well as its types are shown on the left panel of the page. Create a model template file, you data as well as it's will be validated against the template and errors will be shown on the right panel of the page.\"\n      />\n      <HelpItem\n        number={6}\n        title=\"Complete\"\n        subtitle=\"Complete all the 5 steps to complete the project. Tadaa, you have just got all your model template files validated.\"\n      />\n      <HelpItem\n        number={7}\n        title=\"For More Help Visit\"\n        subtitle = \"https://saianirudh-karri.gitbook.io/vreqst\"\n      />\n      <HelpItem\n        number={8}\n        title=\"Happy Development\"\n        subtitle= \" We hope you have a great time using those files in your development ahead 😀\"\n      />\n    </Grid>\n  );\n};\n\nexport default HelpPage;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Button,\n  Center,\n  Flex,\n  Heading,\n  Image,\n  Spinner,\n  useToast,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport FileRow from \"../MyFiles/FileRow\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\nimport empty from \"../../assets/empty.png\";\n\nconst AllFiles = ({ auth }) => {\n  const [data, setdata] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const getmyfiles = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await axios.get(\n        // \"http://localhost:5002/api/json/all\",\n        backend + \"/api/json/all\",\n        requestOptions\n      );\n\n      setdata(res.data);\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    const f = async () => {\n      setLoading(true);\n      await getmyfiles();\n      setLoading(false);\n    };\n    f();\n  }, []);\n\n  return loading ? (\n    <>\n      <Flex\n        width={\"100vw\"}\n        height={\"85vh\"}\n        justifyContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"black\"\n          size=\"xl\"\n        />\n      </Flex>\n    </>\n  ) : (\n    <Box minH=\"85vh\" backgroundColor={\"whitesmoke\"}>\n      <Flex justifyContent={\"space-between\"} mx={\"60px\"} py={\"30px\"}>\n        <Heading>All Model Template Validators</Heading>\n      </Flex>\n      <Flex direction=\"column\" mx={\"60px\"}>\n        {data.length > 0 ? (\n          data\n            .filter((r) => r.ownerid._id !== auth.user.id)\n            .map((row) => {\n              return (\n                <FileRow\n                  key={row._id}\n                  name={row.name}\n                  organization={row.ownerid.organization}\n                  owner={row.ownerid.name}\n                  show={false}\n                />\n              );\n            })\n        ) : (\n          <Center>\n            <Image src={empty} maxW=\"300px\" />\n          </Center>\n        )}\n      </Flex>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(AllFiles);\n","import {\n  Box,\n  ChakraProvider,\n  extendTheme,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport { StepsStyleConfig as Steps } from \"chakra-ui-steps\";\nimport jwt_decode from \"jwt-decode\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport PrivateRoute from \"./Components/private-route/PrivateRoute\";\nimport { logoutUser, setCurrentUser } from \"./redux/actions/authActions\";\nimport store from \"./redux/store\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport AddFile from \"./Components/AddFile/AddFile\";\nimport Login from \"./Components/Auth/Login\";\nimport Register from \"./Components/Auth/Register\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport EditFile from \"./Components/EditFile/EditFile\";\nimport Help from \"./Components/Help/Help\";\nimport MyFiles from \"./Components/MyFiles/MyFiles\";\nimport NotFound from \"./Components/NotFound/NotFound\";\nimport Profile from \"./Components/Profile/Profile\";\nimport Project from \"./Components/Project/Project\";\nimport ProjectPage from \"./Components/Project/ProjectPage\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\n\nimport \"./App.css\";\nimport HelpPage from \"./Components/Help/HelpPage\";\nimport AllFiles from \"./Components/AllFiles/AllFiles\";\n\nconst theme = extendTheme({\n  components: {\n    Steps,\n  },\n});\n\nfunction App() {\n  // Check for token to keep user logged in\n  if (localStorage.jwtToken) {\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded)); // Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser()); // Redirect to login\n      window.location.href = \"./login\";\n    }\n  }\n  const { colorMode, toggleColorMode } = useColorMode();\n  if (colorMode === \"light\") toggleColorMode();\n\n  return (\n    <Provider store={store}>\n      <ChakraProvider theme={theme}>\n        <Router>\n          <Sidebar>\n            <Box>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route path=\"/register\" component={Register} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/help\" component={HelpPage} />\n                <Switch>\n                  <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                  <PrivateRoute exact path=\"/profile\" component={Profile} />\n                  <PrivateRoute exact path=\"/myfiles\" component={MyFiles} />\n                  <PrivateRoute exact path=\"/allfiles\" component={AllFiles} />\n                  <PrivateRoute exact path=\"/myfiles/new\" component={AddFile} />\n                  <PrivateRoute exact path=\"/projects\" component={Project} />\n                  <PrivateRoute path=\"/myfiles/:fileid\" component={EditFile} />\n                  <PrivateRoute\n                    path=\"/projects/:projectid\"\n                    component={ProjectPage}\n                  />\n                  <Route path=\"*\" component={NotFound} />\n                </Switch>\n                <Route path=\"*\" component={NotFound} />\n              </Switch>\n            </Box>\n          </Sidebar>\n        </Router>\n      </ChakraProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/empty.08c78e2b.png\";"],"sourceRoot":""}